/// <reference types='./globals.d.ts' />
/* tslint:disable */
/* eslint-disable */
/**
 * GitHub v3 REST API - version 1.1.4
 *
 * GitHub&#x27;s v3 REST API.
 *
 * OpenAPI version: 3.0.3
 *
 * Contact:
 *
 * NOTE: This file is auto generated by the alova's vscode plugin.
 *
 * https://alova.js.org/devtools/vscode
 *
 * **Do not edit the file manually.**
 */
export default {
  'meta.metaRoot': ['GET', '/'],
  'securityAdvisories.securityAdvisoriesListGlobalAdvisories': ['GET', '/advisories'],
  'securityAdvisories.securityAdvisoriesGetGlobalAdvisory': ['GET', '/advisories/{ghsa_id}'],
  'apps.appsGetAuthenticated': ['GET', '/app'],
  'apps.appsCreateFromManifest': ['POST', '/app-manifests/{code}/conversions'],
  'apps.appsGetWebhookConfigForApp': ['GET', '/app/hook/config'],
  'apps.appsUpdateWebhookConfigForApp': ['PATCH', '/app/hook/config'],
  'apps.appsListWebhookDeliveries': ['GET', '/app/hook/deliveries'],
  'apps.appsGetWebhookDelivery': ['GET', '/app/hook/deliveries/{delivery_id}'],
  'apps.appsRedeliverWebhookDelivery': ['POST', '/app/hook/deliveries/{delivery_id}/attempts'],
  'apps.appsListInstallationRequestsForAuthenticatedApp': ['GET', '/app/installation-requests'],
  'apps.appsListInstallations': ['GET', '/app/installations'],
  'apps.appsGetInstallation': ['GET', '/app/installations/{installation_id}'],
  'apps.appsDeleteInstallation': ['DELETE', '/app/installations/{installation_id}'],
  'apps.appsCreateInstallationAccessToken': ['POST', '/app/installations/{installation_id}/access_tokens'],
  'apps.appsSuspendInstallation': ['PUT', '/app/installations/{installation_id}/suspended'],
  'apps.appsUnsuspendInstallation': ['DELETE', '/app/installations/{installation_id}/suspended'],
  'apps.appsDeleteAuthorization': ['DELETE', '/applications/{client_id}/grant'],
  'apps.appsCheckToken': ['POST', '/applications/{client_id}/token'],
  'apps.appsResetToken': ['PATCH', '/applications/{client_id}/token'],
  'apps.appsDeleteToken': ['DELETE', '/applications/{client_id}/token'],
  'apps.appsScopeToken': ['POST', '/applications/{client_id}/token/scoped'],
  'apps.appsGetBySlug': ['GET', '/apps/{app_slug}'],
  'classroom.classroomGetAnAssignment': ['GET', '/assignments/{assignment_id}'],
  'classroom.classroomListAcceptedAssignmentsForAnAssignment': [
    'GET',
    '/assignments/{assignment_id}/accepted_assignments'
  ],
  'classroom.classroomGetAssignmentGrades': ['GET', '/assignments/{assignment_id}/grades'],
  'classroom.classroomListClassrooms': ['GET', '/classrooms'],
  'classroom.classroomGetAClassroom': ['GET', '/classrooms/{classroom_id}'],
  'classroom.classroomListAssignmentsForAClassroom': ['GET', '/classrooms/{classroom_id}/assignments'],
  'codesOfConduct.codesOfConductGetAllCodesOfConduct': ['GET', '/codes_of_conduct'],
  'codesOfConduct.codesOfConductGetConductCode': ['GET', '/codes_of_conduct/{key}'],
  'credentials.credentialsRevoke': ['POST', '/credentials/revoke'],
  'emojis.emojisGet': ['GET', '/emojis'],
  'codeSecurity.codeSecurityGetConfigurationsForEnterprise': [
    'GET',
    '/enterprises/{enterprise}/code-security/configurations'
  ],
  'codeSecurity.codeSecurityCreateConfigurationForEnterprise': [
    'POST',
    '/enterprises/{enterprise}/code-security/configurations'
  ],
  'codeSecurity.codeSecurityGetDefaultConfigurationsForEnterprise': [
    'GET',
    '/enterprises/{enterprise}/code-security/configurations/defaults'
  ],
  'codeSecurity.codeSecurityGetSingleConfigurationForEnterprise': [
    'GET',
    '/enterprises/{enterprise}/code-security/configurations/{configuration_id}'
  ],
  'codeSecurity.codeSecurityUpdateEnterpriseConfiguration': [
    'PATCH',
    '/enterprises/{enterprise}/code-security/configurations/{configuration_id}'
  ],
  'codeSecurity.codeSecurityDeleteConfigurationForEnterprise': [
    'DELETE',
    '/enterprises/{enterprise}/code-security/configurations/{configuration_id}'
  ],
  'codeSecurity.codeSecurityAttachEnterpriseConfiguration': [
    'POST',
    '/enterprises/{enterprise}/code-security/configurations/{configuration_id}/attach'
  ],
  'codeSecurity.codeSecuritySetConfigurationAsDefaultForEnterprise': [
    'PUT',
    '/enterprises/{enterprise}/code-security/configurations/{configuration_id}/defaults'
  ],
  'codeSecurity.codeSecurityGetRepositoriesForEnterpriseConfiguration': [
    'GET',
    '/enterprises/{enterprise}/code-security/configurations/{configuration_id}/repositories'
  ],
  'dependabot.dependabotListAlertsForEnterprise': ['GET', '/enterprises/{enterprise}/dependabot/alerts'],
  'secretScanning.secretScanningListAlertsForEnterprise': ['GET', '/enterprises/{enterprise}/secret-scanning/alerts'],
  'enterpriseTeams.enterpriseTeamsList': ['GET', '/enterprises/{enterprise}/teams'],
  'enterpriseTeams.enterpriseTeamsCreate': ['POST', '/enterprises/{enterprise}/teams'],
  'enterpriseTeamMemberships.enterpriseTeamMembershipsList': [
    'GET',
    '/enterprises/{enterprise}/teams/{enterprise-team}/memberships'
  ],
  'enterpriseTeamMemberships.enterpriseTeamMembershipsBulkAdd': [
    'POST',
    '/enterprises/{enterprise}/teams/{enterprise-team}/memberships/add'
  ],
  'enterpriseTeamMemberships.enterpriseTeamMembershipsBulkRemove': [
    'POST',
    '/enterprises/{enterprise}/teams/{enterprise-team}/memberships/remove'
  ],
  'enterpriseTeamMemberships.enterpriseTeamMembershipsGet': [
    'GET',
    '/enterprises/{enterprise}/teams/{enterprise-team}/memberships/{username}'
  ],
  'enterpriseTeamMemberships.enterpriseTeamMembershipsAdd': [
    'PUT',
    '/enterprises/{enterprise}/teams/{enterprise-team}/memberships/{username}'
  ],
  'enterpriseTeamMemberships.enterpriseTeamMembershipsRemove': [
    'DELETE',
    '/enterprises/{enterprise}/teams/{enterprise-team}/memberships/{username}'
  ],
  'enterpriseTeams.enterpriseTeamsGet': ['GET', '/enterprises/{enterprise}/teams/{team_slug}'],
  'enterpriseTeams.enterpriseTeamsUpdate': ['PATCH', '/enterprises/{enterprise}/teams/{team_slug}'],
  'enterpriseTeams.enterpriseTeamsDelete': ['DELETE', '/enterprises/{enterprise}/teams/{team_slug}'],
  'activity.activityListPublicEvents': ['GET', '/events'],
  'activity.activityGetFeeds': ['GET', '/feeds'],
  'gists.gistsList': ['GET', '/gists'],
  'gists.gistsCreate': ['POST', '/gists'],
  'gists.gistsListPublic': ['GET', '/gists/public'],
  'gists.gistsListStarred': ['GET', '/gists/starred'],
  'gists.gistsGet': ['GET', '/gists/{gist_id}'],
  'gists.gistsUpdate': ['PATCH', '/gists/{gist_id}'],
  'gists.gistsDelete': ['DELETE', '/gists/{gist_id}'],
  'gists.gistsListComments': ['GET', '/gists/{gist_id}/comments'],
  'gists.gistsCreateComment': ['POST', '/gists/{gist_id}/comments'],
  'gists.gistsGetComment': ['GET', '/gists/{gist_id}/comments/{comment_id}'],
  'gists.gistsUpdateComment': ['PATCH', '/gists/{gist_id}/comments/{comment_id}'],
  'gists.gistsDeleteComment': ['DELETE', '/gists/{gist_id}/comments/{comment_id}'],
  'gists.gistsListCommits': ['GET', '/gists/{gist_id}/commits'],
  'gists.gistsListForks': ['GET', '/gists/{gist_id}/forks'],
  'gists.gistsFork': ['POST', '/gists/{gist_id}/forks'],
  'gists.gistsCheckIsStarred': ['GET', '/gists/{gist_id}/star'],
  'gists.gistsStar': ['PUT', '/gists/{gist_id}/star'],
  'gists.gistsUnstar': ['DELETE', '/gists/{gist_id}/star'],
  'gists.gistsGetRevision': ['GET', '/gists/{gist_id}/{sha}'],
  'gitignore.gitignoreGetAllTemplates': ['GET', '/gitignore/templates'],
  'gitignore.gitignoreGetTemplate': ['GET', '/gitignore/templates/{name}'],
  'apps.appsListReposAccessibleToInstallation': ['GET', '/installation/repositories'],
  'apps.appsRevokeInstallationAccessToken': ['DELETE', '/installation/token'],
  'issues.issuesList': ['GET', '/issues'],
  'licenses.licensesGetAllCommonlyUsed': ['GET', '/licenses'],
  'licenses.licensesGet': ['GET', '/licenses/{license}'],
  'markdown.markdownRender': ['POST', '/markdown'],
  'markdown.markdownRenderRaw': ['POST', '/markdown/raw'],
  'apps.appsGetSubscriptionPlanForAccount': ['GET', '/marketplace_listing/accounts/{account_id}'],
  'apps.appsListPlans': ['GET', '/marketplace_listing/plans'],
  'apps.appsListAccountsForPlan': ['GET', '/marketplace_listing/plans/{plan_id}/accounts'],
  'apps.appsGetSubscriptionPlanForAccountStubbed': ['GET', '/marketplace_listing/stubbed/accounts/{account_id}'],
  'apps.appsListPlansStubbed': ['GET', '/marketplace_listing/stubbed/plans'],
  'apps.appsListAccountsForPlanStubbed': ['GET', '/marketplace_listing/stubbed/plans/{plan_id}/accounts'],
  'meta.metaGet': ['GET', '/meta'],
  'activity.activityListPublicEventsForRepoNetwork': ['GET', '/networks/{owner}/{repo}/events'],
  'activity.activityListNotificationsForAuthenticatedUser': ['GET', '/notifications'],
  'activity.activityMarkNotificationsAsRead': ['PUT', '/notifications'],
  'activity.activityGetThread': ['GET', '/notifications/threads/{thread_id}'],
  'activity.activityMarkThreadAsRead': ['PATCH', '/notifications/threads/{thread_id}'],
  'activity.activityMarkThreadAsDone': ['DELETE', '/notifications/threads/{thread_id}'],
  'activity.activityGetThreadSubscriptionForAuthenticatedUser': [
    'GET',
    '/notifications/threads/{thread_id}/subscription'
  ],
  'activity.activitySetThreadSubscription': ['PUT', '/notifications/threads/{thread_id}/subscription'],
  'activity.activityDeleteThreadSubscription': ['DELETE', '/notifications/threads/{thread_id}/subscription'],
  'meta.metaGetOctocat': ['GET', '/octocat'],
  'orgs.orgsList': ['GET', '/organizations'],
  'dependabot.dependabotRepositoryAccessForOrg': ['GET', '/organizations/{org}/dependabot/repository-access'],
  'dependabot.dependabotUpdateRepositoryAccessForOrg': ['PATCH', '/organizations/{org}/dependabot/repository-access'],
  'dependabot.dependabotSetRepositoryAccessDefaultLevel': [
    'PUT',
    '/organizations/{org}/dependabot/repository-access/default-level'
  ],
  'billing.billingGetGithubBillingPremiumRequestUsageReportOrg': [
    'GET',
    '/organizations/{org}/settings/billing/premium_request/usage'
  ],
  'billing.billingGetGithubBillingUsageReportOrg': ['GET', '/organizations/{org}/settings/billing/usage'],
  'orgs.orgsGet': ['GET', '/orgs/{org}'],
  'orgs.orgsUpdate': ['PATCH', '/orgs/{org}'],
  'orgs.orgsDelete': ['DELETE', '/orgs/{org}'],
  'actions.actionsGetActionsCacheUsageForOrg': ['GET', '/orgs/{org}/actions/cache/usage'],
  'actions.actionsGetActionsCacheUsageByRepoForOrg': ['GET', '/orgs/{org}/actions/cache/usage-by-repository'],
  'actions.actionsListHostedRunnersForOrg': ['GET', '/orgs/{org}/actions/hosted-runners'],
  'actions.actionsCreateHostedRunnerForOrg': ['POST', '/orgs/{org}/actions/hosted-runners'],
  'actions.actionsGetHostedRunnersGithubOwnedImagesForOrg': [
    'GET',
    '/orgs/{org}/actions/hosted-runners/images/github-owned'
  ],
  'actions.actionsGetHostedRunnersPartnerImagesForOrg': ['GET', '/orgs/{org}/actions/hosted-runners/images/partner'],
  'actions.actionsGetHostedRunnersLimitsForOrg': ['GET', '/orgs/{org}/actions/hosted-runners/limits'],
  'actions.actionsGetHostedRunnersMachineSpecsForOrg': ['GET', '/orgs/{org}/actions/hosted-runners/machine-sizes'],
  'actions.actionsGetHostedRunnersPlatformsForOrg': ['GET', '/orgs/{org}/actions/hosted-runners/platforms'],
  'actions.actionsGetHostedRunnerForOrg': ['GET', '/orgs/{org}/actions/hosted-runners/{hosted_runner_id}'],
  'actions.actionsUpdateHostedRunnerForOrg': ['PATCH', '/orgs/{org}/actions/hosted-runners/{hosted_runner_id}'],
  'actions.actionsDeleteHostedRunnerForOrg': ['DELETE', '/orgs/{org}/actions/hosted-runners/{hosted_runner_id}'],
  'oidc.oidcGetOidcCustomSubTemplateForOrg': ['GET', '/orgs/{org}/actions/oidc/customization/sub'],
  'oidc.oidcUpdateOidcCustomSubTemplateForOrg': ['PUT', '/orgs/{org}/actions/oidc/customization/sub'],
  'actions.actionsGetGithubActionsPermissionsOrganization': ['GET', '/orgs/{org}/actions/permissions'],
  'actions.actionsSetGithubActionsPermissionsOrganization': ['PUT', '/orgs/{org}/actions/permissions'],
  'actions.actionsGetArtifactAndLogRetentionSettingsOrganization': [
    'GET',
    '/orgs/{org}/actions/permissions/artifact-and-log-retention'
  ],
  'actions.actionsSetArtifactAndLogRetentionSettingsOrganization': [
    'PUT',
    '/orgs/{org}/actions/permissions/artifact-and-log-retention'
  ],
  'actions.actionsGetForkPrContributorApprovalPermissionsOrganization': [
    'GET',
    '/orgs/{org}/actions/permissions/fork-pr-contributor-approval'
  ],
  'actions.actionsSetForkPrContributorApprovalPermissionsOrganization': [
    'PUT',
    '/orgs/{org}/actions/permissions/fork-pr-contributor-approval'
  ],
  'actions.actionsGetPrivateRepoForkPrWorkflowsSettingsOrganization': [
    'GET',
    '/orgs/{org}/actions/permissions/fork-pr-workflows-private-repos'
  ],
  'actions.actionsSetPrivateRepoForkPrWorkflowsSettingsOrganization': [
    'PUT',
    '/orgs/{org}/actions/permissions/fork-pr-workflows-private-repos'
  ],
  'actions.actionsListSelectedRepositoriesEnabledGithubActionsOrganization': [
    'GET',
    '/orgs/{org}/actions/permissions/repositories'
  ],
  'actions.actionsSetSelectedRepositoriesEnabledGithubActionsOrganization': [
    'PUT',
    '/orgs/{org}/actions/permissions/repositories'
  ],
  'actions.actionsEnableSelectedRepositoryGithubActionsOrganization': [
    'PUT',
    '/orgs/{org}/actions/permissions/repositories/{repository_id}'
  ],
  'actions.actionsDisableSelectedRepositoryGithubActionsOrganization': [
    'DELETE',
    '/orgs/{org}/actions/permissions/repositories/{repository_id}'
  ],
  'actions.actionsGetAllowedActionsOrganization': ['GET', '/orgs/{org}/actions/permissions/selected-actions'],
  'actions.actionsSetAllowedActionsOrganization': ['PUT', '/orgs/{org}/actions/permissions/selected-actions'],
  'actions.actionsGetSelfHostedRunnersPermissionsOrganization': [
    'GET',
    '/orgs/{org}/actions/permissions/self-hosted-runners'
  ],
  'actions.actionsSetSelfHostedRunnersPermissionsOrganization': [
    'PUT',
    '/orgs/{org}/actions/permissions/self-hosted-runners'
  ],
  'actions.actionsListSelectedRepositoriesSelfHostedRunnersOrganization': [
    'GET',
    '/orgs/{org}/actions/permissions/self-hosted-runners/repositories'
  ],
  'actions.actionsSetSelectedRepositoriesSelfHostedRunnersOrganization': [
    'PUT',
    '/orgs/{org}/actions/permissions/self-hosted-runners/repositories'
  ],
  'actions.actionsEnableSelectedRepositorySelfHostedRunnersOrganization': [
    'PUT',
    '/orgs/{org}/actions/permissions/self-hosted-runners/repositories/{repository_id}'
  ],
  'actions.actionsDisableSelectedRepositorySelfHostedRunnersOrganization': [
    'DELETE',
    '/orgs/{org}/actions/permissions/self-hosted-runners/repositories/{repository_id}'
  ],
  'actions.actionsGetGithubActionsDefaultWorkflowPermissionsOrganization': [
    'GET',
    '/orgs/{org}/actions/permissions/workflow'
  ],
  'actions.actionsSetGithubActionsDefaultWorkflowPermissionsOrganization': [
    'PUT',
    '/orgs/{org}/actions/permissions/workflow'
  ],
  'actions.actionsListSelfHostedRunnerGroupsForOrg': ['GET', '/orgs/{org}/actions/runner-groups'],
  'actions.actionsCreateSelfHostedRunnerGroupForOrg': ['POST', '/orgs/{org}/actions/runner-groups'],
  'actions.actionsGetSelfHostedRunnerGroupForOrg': ['GET', '/orgs/{org}/actions/runner-groups/{runner_group_id}'],
  'actions.actionsUpdateSelfHostedRunnerGroupForOrg': ['PATCH', '/orgs/{org}/actions/runner-groups/{runner_group_id}'],
  'actions.actionsDeleteSelfHostedRunnerGroupFromOrg': [
    'DELETE',
    '/orgs/{org}/actions/runner-groups/{runner_group_id}'
  ],
  'actions.actionsListGithubHostedRunnersInGroupForOrg': [
    'GET',
    '/orgs/{org}/actions/runner-groups/{runner_group_id}/hosted-runners'
  ],
  'actions.actionsListRepoAccessToSelfHostedRunnerGroupInOrg': [
    'GET',
    '/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories'
  ],
  'actions.actionsSetRepoAccessToSelfHostedRunnerGroupInOrg': [
    'PUT',
    '/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories'
  ],
  'actions.actionsAddRepoAccessToSelfHostedRunnerGroupInOrg': [
    'PUT',
    '/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}'
  ],
  'actions.actionsRemoveRepoAccessToSelfHostedRunnerGroupInOrg': [
    'DELETE',
    '/orgs/{org}/actions/runner-groups/{runner_group_id}/repositories/{repository_id}'
  ],
  'actions.actionsListSelfHostedRunnersInGroupForOrg': [
    'GET',
    '/orgs/{org}/actions/runner-groups/{runner_group_id}/runners'
  ],
  'actions.actionsSetSelfHostedRunnersInGroupForOrg': [
    'PUT',
    '/orgs/{org}/actions/runner-groups/{runner_group_id}/runners'
  ],
  'actions.actionsAddSelfHostedRunnerToGroupForOrg': [
    'PUT',
    '/orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}'
  ],
  'actions.actionsRemoveSelfHostedRunnerFromGroupForOrg': [
    'DELETE',
    '/orgs/{org}/actions/runner-groups/{runner_group_id}/runners/{runner_id}'
  ],
  'actions.actionsListSelfHostedRunnersForOrg': ['GET', '/orgs/{org}/actions/runners'],
  'actions.actionsListRunnerApplicationsForOrg': ['GET', '/orgs/{org}/actions/runners/downloads'],
  'actions.actionsGenerateRunnerJitconfigForOrg': ['POST', '/orgs/{org}/actions/runners/generate-jitconfig'],
  'actions.actionsCreateRegistrationTokenForOrg': ['POST', '/orgs/{org}/actions/runners/registration-token'],
  'actions.actionsCreateRemoveTokenForOrg': ['POST', '/orgs/{org}/actions/runners/remove-token'],
  'actions.actionsGetSelfHostedRunnerForOrg': ['GET', '/orgs/{org}/actions/runners/{runner_id}'],
  'actions.actionsDeleteSelfHostedRunnerFromOrg': ['DELETE', '/orgs/{org}/actions/runners/{runner_id}'],
  'actions.actionsListLabelsForSelfHostedRunnerForOrg': ['GET', '/orgs/{org}/actions/runners/{runner_id}/labels'],
  'actions.actionsAddCustomLabelsToSelfHostedRunnerForOrg': ['POST', '/orgs/{org}/actions/runners/{runner_id}/labels'],
  'actions.actionsSetCustomLabelsForSelfHostedRunnerForOrg': ['PUT', '/orgs/{org}/actions/runners/{runner_id}/labels'],
  'actions.actionsRemoveAllCustomLabelsFromSelfHostedRunnerForOrg': [
    'DELETE',
    '/orgs/{org}/actions/runners/{runner_id}/labels'
  ],
  'actions.actionsRemoveCustomLabelFromSelfHostedRunnerForOrg': [
    'DELETE',
    '/orgs/{org}/actions/runners/{runner_id}/labels/{name}'
  ],
  'actions.actionsListOrgSecrets': ['GET', '/orgs/{org}/actions/secrets'],
  'actions.actionsGetOrgPublicKey': ['GET', '/orgs/{org}/actions/secrets/public-key'],
  'actions.actionsGetOrgSecret': ['GET', '/orgs/{org}/actions/secrets/{secret_name}'],
  'actions.actionsCreateOrUpdateOrgSecret': ['PUT', '/orgs/{org}/actions/secrets/{secret_name}'],
  'actions.actionsDeleteOrgSecret': ['DELETE', '/orgs/{org}/actions/secrets/{secret_name}'],
  'actions.actionsListSelectedReposForOrgSecret': ['GET', '/orgs/{org}/actions/secrets/{secret_name}/repositories'],
  'actions.actionsSetSelectedReposForOrgSecret': ['PUT', '/orgs/{org}/actions/secrets/{secret_name}/repositories'],
  'actions.actionsAddSelectedRepoToOrgSecret': [
    'PUT',
    '/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}'
  ],
  'actions.actionsRemoveSelectedRepoFromOrgSecret': [
    'DELETE',
    '/orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}'
  ],
  'actions.actionsListOrgVariables': ['GET', '/orgs/{org}/actions/variables'],
  'actions.actionsCreateOrgVariable': ['POST', '/orgs/{org}/actions/variables'],
  'actions.actionsGetOrgVariable': ['GET', '/orgs/{org}/actions/variables/{name}'],
  'actions.actionsUpdateOrgVariable': ['PATCH', '/orgs/{org}/actions/variables/{name}'],
  'actions.actionsDeleteOrgVariable': ['DELETE', '/orgs/{org}/actions/variables/{name}'],
  'actions.actionsListSelectedReposForOrgVariable': ['GET', '/orgs/{org}/actions/variables/{name}/repositories'],
  'actions.actionsSetSelectedReposForOrgVariable': ['PUT', '/orgs/{org}/actions/variables/{name}/repositories'],
  'actions.actionsAddSelectedRepoToOrgVariable': [
    'PUT',
    '/orgs/{org}/actions/variables/{name}/repositories/{repository_id}'
  ],
  'actions.actionsRemoveSelectedRepoFromOrgVariable': [
    'DELETE',
    '/orgs/{org}/actions/variables/{name}/repositories/{repository_id}'
  ],
  'orgs.orgsCreateArtifactStorageRecord': ['POST', '/orgs/{org}/artifacts/metadata/storage-record'],
  'orgs.orgsListArtifactStorageRecords': ['GET', '/orgs/{org}/artifacts/{subject_digest}/metadata/storage-records'],
  'orgs.orgsListAttestationsBulk': ['POST', '/orgs/{org}/attestations/bulk-list'],
  'orgs.orgsDeleteAttestationsBulk': ['POST', '/orgs/{org}/attestations/delete-request'],
  'orgs.orgsDeleteAttestationsBySubjectDigest': ['DELETE', '/orgs/{org}/attestations/digest/{subject_digest}'],
  'orgs.orgsDeleteAttestationsById': ['DELETE', '/orgs/{org}/attestations/{attestation_id}'],
  'orgs.orgsListAttestations': ['GET', '/orgs/{org}/attestations/{subject_digest}'],
  'orgs.orgsListBlockedUsers': ['GET', '/orgs/{org}/blocks'],
  'orgs.orgsCheckBlockedUser': ['GET', '/orgs/{org}/blocks/{username}'],
  'orgs.orgsBlockUser': ['PUT', '/orgs/{org}/blocks/{username}'],
  'orgs.orgsUnblockUser': ['DELETE', '/orgs/{org}/blocks/{username}'],
  'campaigns.campaignsListOrgCampaigns': ['GET', '/orgs/{org}/campaigns'],
  'campaigns.campaignsCreateCampaign': ['POST', '/orgs/{org}/campaigns'],
  'campaigns.campaignsGetCampaignSummary': ['GET', '/orgs/{org}/campaigns/{campaign_number}'],
  'campaigns.campaignsUpdateCampaign': ['PATCH', '/orgs/{org}/campaigns/{campaign_number}'],
  'campaigns.campaignsDeleteCampaign': ['DELETE', '/orgs/{org}/campaigns/{campaign_number}'],
  'codeScanning.codeScanningListAlertsForOrg': ['GET', '/orgs/{org}/code-scanning/alerts'],
  'codeSecurity.codeSecurityGetConfigurationsForOrg': ['GET', '/orgs/{org}/code-security/configurations'],
  'codeSecurity.codeSecurityCreateConfiguration': ['POST', '/orgs/{org}/code-security/configurations'],
  'codeSecurity.codeSecurityGetDefaultConfigurations': ['GET', '/orgs/{org}/code-security/configurations/defaults'],
  'codeSecurity.codeSecurityDetachConfiguration': ['DELETE', '/orgs/{org}/code-security/configurations/detach'],
  'codeSecurity.codeSecurityGetConfiguration': ['GET', '/orgs/{org}/code-security/configurations/{configuration_id}'],
  'codeSecurity.codeSecurityUpdateConfiguration': [
    'PATCH',
    '/orgs/{org}/code-security/configurations/{configuration_id}'
  ],
  'codeSecurity.codeSecurityDeleteConfiguration': [
    'DELETE',
    '/orgs/{org}/code-security/configurations/{configuration_id}'
  ],
  'codeSecurity.codeSecurityAttachConfiguration': [
    'POST',
    '/orgs/{org}/code-security/configurations/{configuration_id}/attach'
  ],
  'codeSecurity.codeSecuritySetConfigurationAsDefault': [
    'PUT',
    '/orgs/{org}/code-security/configurations/{configuration_id}/defaults'
  ],
  'codeSecurity.codeSecurityGetRepositoriesForConfiguration': [
    'GET',
    '/orgs/{org}/code-security/configurations/{configuration_id}/repositories'
  ],
  'codespaces.codespacesListInOrganization': ['GET', '/orgs/{org}/codespaces'],
  'codespaces.codespacesSetCodespacesAccess': ['PUT', '/orgs/{org}/codespaces/access'],
  'codespaces.codespacesSetCodespacesAccessUsers': ['POST', '/orgs/{org}/codespaces/access/selected_users'],
  'codespaces.codespacesDeleteCodespacesAccessUsers': ['DELETE', '/orgs/{org}/codespaces/access/selected_users'],
  'codespaces.codespacesListOrgSecrets': ['GET', '/orgs/{org}/codespaces/secrets'],
  'codespaces.codespacesGetOrgPublicKey': ['GET', '/orgs/{org}/codespaces/secrets/public-key'],
  'codespaces.codespacesGetOrgSecret': ['GET', '/orgs/{org}/codespaces/secrets/{secret_name}'],
  'codespaces.codespacesCreateOrUpdateOrgSecret': ['PUT', '/orgs/{org}/codespaces/secrets/{secret_name}'],
  'codespaces.codespacesDeleteOrgSecret': ['DELETE', '/orgs/{org}/codespaces/secrets/{secret_name}'],
  'codespaces.codespacesListSelectedReposForOrgSecret': [
    'GET',
    '/orgs/{org}/codespaces/secrets/{secret_name}/repositories'
  ],
  'codespaces.codespacesSetSelectedReposForOrgSecret': [
    'PUT',
    '/orgs/{org}/codespaces/secrets/{secret_name}/repositories'
  ],
  'codespaces.codespacesAddSelectedRepoToOrgSecret': [
    'PUT',
    '/orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}'
  ],
  'codespaces.codespacesRemoveSelectedRepoFromOrgSecret': [
    'DELETE',
    '/orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}'
  ],
  'copilot.copilotGetCopilotOrganizationDetails': ['GET', '/orgs/{org}/copilot/billing'],
  'copilot.copilotListCopilotSeats': ['GET', '/orgs/{org}/copilot/billing/seats'],
  'copilot.copilotAddCopilotSeatsForTeams': ['POST', '/orgs/{org}/copilot/billing/selected_teams'],
  'copilot.copilotCancelCopilotSeatAssignmentForTeams': ['DELETE', '/orgs/{org}/copilot/billing/selected_teams'],
  'copilot.copilotAddCopilotSeatsForUsers': ['POST', '/orgs/{org}/copilot/billing/selected_users'],
  'copilot.copilotCancelCopilotSeatAssignmentForUsers': ['DELETE', '/orgs/{org}/copilot/billing/selected_users'],
  'copilot.copilotCopilotMetricsForOrganization': ['GET', '/orgs/{org}/copilot/metrics'],
  'dependabot.dependabotListAlertsForOrg': ['GET', '/orgs/{org}/dependabot/alerts'],
  'dependabot.dependabotListOrgSecrets': ['GET', '/orgs/{org}/dependabot/secrets'],
  'dependabot.dependabotGetOrgPublicKey': ['GET', '/orgs/{org}/dependabot/secrets/public-key'],
  'dependabot.dependabotGetOrgSecret': ['GET', '/orgs/{org}/dependabot/secrets/{secret_name}'],
  'dependabot.dependabotCreateOrUpdateOrgSecret': ['PUT', '/orgs/{org}/dependabot/secrets/{secret_name}'],
  'dependabot.dependabotDeleteOrgSecret': ['DELETE', '/orgs/{org}/dependabot/secrets/{secret_name}'],
  'dependabot.dependabotListSelectedReposForOrgSecret': [
    'GET',
    '/orgs/{org}/dependabot/secrets/{secret_name}/repositories'
  ],
  'dependabot.dependabotSetSelectedReposForOrgSecret': [
    'PUT',
    '/orgs/{org}/dependabot/secrets/{secret_name}/repositories'
  ],
  'dependabot.dependabotAddSelectedRepoToOrgSecret': [
    'PUT',
    '/orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}'
  ],
  'dependabot.dependabotRemoveSelectedRepoFromOrgSecret': [
    'DELETE',
    '/orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}'
  ],
  'packages.packagesListDockerMigrationConflictingPackagesForOrganization': ['GET', '/orgs/{org}/docker/conflicts'],
  'activity.activityListPublicOrgEvents': ['GET', '/orgs/{org}/events'],
  'orgs.orgsListFailedInvitations': ['GET', '/orgs/{org}/failed_invitations'],
  'orgs.orgsListWebhooks': ['GET', '/orgs/{org}/hooks'],
  'orgs.orgsCreateWebhook': ['POST', '/orgs/{org}/hooks'],
  'orgs.orgsGetWebhook': ['GET', '/orgs/{org}/hooks/{hook_id}'],
  'orgs.orgsUpdateWebhook': ['PATCH', '/orgs/{org}/hooks/{hook_id}'],
  'orgs.orgsDeleteWebhook': ['DELETE', '/orgs/{org}/hooks/{hook_id}'],
  'orgs.orgsGetWebhookConfigForOrg': ['GET', '/orgs/{org}/hooks/{hook_id}/config'],
  'orgs.orgsUpdateWebhookConfigForOrg': ['PATCH', '/orgs/{org}/hooks/{hook_id}/config'],
  'orgs.orgsListWebhookDeliveries': ['GET', '/orgs/{org}/hooks/{hook_id}/deliveries'],
  'orgs.orgsGetWebhookDelivery': ['GET', '/orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}'],
  'orgs.orgsRedeliverWebhookDelivery': ['POST', '/orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts'],
  'orgs.orgsPingWebhook': ['POST', '/orgs/{org}/hooks/{hook_id}/pings'],
  'orgs.apiInsightsGetRouteStatsByActor': ['GET', '/orgs/{org}/insights/api/route-stats/{actor_type}/{actor_id}'],
  'orgs.apiInsightsGetSubjectStats': ['GET', '/orgs/{org}/insights/api/subject-stats'],
  'orgs.apiInsightsGetSummaryStats': ['GET', '/orgs/{org}/insights/api/summary-stats'],
  'orgs.apiInsightsGetSummaryStatsByUser': ['GET', '/orgs/{org}/insights/api/summary-stats/users/{user_id}'],
  'orgs.apiInsightsGetSummaryStatsByActor': ['GET', '/orgs/{org}/insights/api/summary-stats/{actor_type}/{actor_id}'],
  'orgs.apiInsightsGetTimeStats': ['GET', '/orgs/{org}/insights/api/time-stats'],
  'orgs.apiInsightsGetTimeStatsByUser': ['GET', '/orgs/{org}/insights/api/time-stats/users/{user_id}'],
  'orgs.apiInsightsGetTimeStatsByActor': ['GET', '/orgs/{org}/insights/api/time-stats/{actor_type}/{actor_id}'],
  'orgs.apiInsightsGetUserStats': ['GET', '/orgs/{org}/insights/api/user-stats/{user_id}'],
  'apps.appsGetOrgInstallation': ['GET', '/orgs/{org}/installation'],
  'orgs.orgsListAppInstallations': ['GET', '/orgs/{org}/installations'],
  'interactions.interactionsGetRestrictionsForOrg': ['GET', '/orgs/{org}/interaction-limits'],
  'interactions.interactionsSetRestrictionsForOrg': ['PUT', '/orgs/{org}/interaction-limits'],
  'interactions.interactionsRemoveRestrictionsForOrg': ['DELETE', '/orgs/{org}/interaction-limits'],
  'orgs.orgsListPendingInvitations': ['GET', '/orgs/{org}/invitations'],
  'orgs.orgsCreateInvitation': ['POST', '/orgs/{org}/invitations'],
  'orgs.orgsCancelInvitation': ['DELETE', '/orgs/{org}/invitations/{invitation_id}'],
  'orgs.orgsListInvitationTeams': ['GET', '/orgs/{org}/invitations/{invitation_id}/teams'],
  'orgs.orgsListIssueTypes': ['GET', '/orgs/{org}/issue-types'],
  'orgs.orgsCreateIssueType': ['POST', '/orgs/{org}/issue-types'],
  'orgs.orgsUpdateIssueType': ['PUT', '/orgs/{org}/issue-types/{issue_type_id}'],
  'orgs.orgsDeleteIssueType': ['DELETE', '/orgs/{org}/issue-types/{issue_type_id}'],
  'issues.issuesListForOrg': ['GET', '/orgs/{org}/issues'],
  'orgs.orgsListMembers': ['GET', '/orgs/{org}/members'],
  'orgs.orgsCheckMembershipForUser': ['GET', '/orgs/{org}/members/{username}'],
  'orgs.orgsRemoveMember': ['DELETE', '/orgs/{org}/members/{username}'],
  'codespaces.codespacesGetCodespacesForUserInOrg': ['GET', '/orgs/{org}/members/{username}/codespaces'],
  'codespaces.codespacesDeleteFromOrganization': [
    'DELETE',
    '/orgs/{org}/members/{username}/codespaces/{codespace_name}'
  ],
  'codespaces.codespacesStopInOrganization': [
    'POST',
    '/orgs/{org}/members/{username}/codespaces/{codespace_name}/stop'
  ],
  'copilot.copilotGetCopilotSeatDetailsForUser': ['GET', '/orgs/{org}/members/{username}/copilot'],
  'orgs.orgsGetMembershipForUser': ['GET', '/orgs/{org}/memberships/{username}'],
  'orgs.orgsSetMembershipForUser': ['PUT', '/orgs/{org}/memberships/{username}'],
  'orgs.orgsRemoveMembershipForUser': ['DELETE', '/orgs/{org}/memberships/{username}'],
  'migrations.migrationsListForOrg': ['GET', '/orgs/{org}/migrations'],
  'migrations.migrationsStartForOrg': ['POST', '/orgs/{org}/migrations'],
  'migrations.migrationsGetStatusForOrg': ['GET', '/orgs/{org}/migrations/{migration_id}'],
  'migrations.migrationsDownloadArchiveForOrg': ['GET', '/orgs/{org}/migrations/{migration_id}/archive'],
  'migrations.migrationsDeleteArchiveForOrg': ['DELETE', '/orgs/{org}/migrations/{migration_id}/archive'],
  'migrations.migrationsUnlockRepoForOrg': ['DELETE', '/orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock'],
  'migrations.migrationsListReposForOrg': ['GET', '/orgs/{org}/migrations/{migration_id}/repositories'],
  'orgs.orgsListOrgRoles': ['GET', '/orgs/{org}/organization-roles'],
  'orgs.orgsRevokeAllOrgRolesTeam': ['DELETE', '/orgs/{org}/organization-roles/teams/{team_slug}'],
  'orgs.orgsAssignTeamToOrgRole': ['PUT', '/orgs/{org}/organization-roles/teams/{team_slug}/{role_id}'],
  'orgs.orgsRevokeOrgRoleTeam': ['DELETE', '/orgs/{org}/organization-roles/teams/{team_slug}/{role_id}'],
  'orgs.orgsRevokeAllOrgRolesUser': ['DELETE', '/orgs/{org}/organization-roles/users/{username}'],
  'orgs.orgsAssignUserToOrgRole': ['PUT', '/orgs/{org}/organization-roles/users/{username}/{role_id}'],
  'orgs.orgsRevokeOrgRoleUser': ['DELETE', '/orgs/{org}/organization-roles/users/{username}/{role_id}'],
  'orgs.orgsGetOrgRole': ['GET', '/orgs/{org}/organization-roles/{role_id}'],
  'orgs.orgsListOrgRoleTeams': ['GET', '/orgs/{org}/organization-roles/{role_id}/teams'],
  'orgs.orgsListOrgRoleUsers': ['GET', '/orgs/{org}/organization-roles/{role_id}/users'],
  'orgs.orgsListOutsideCollaborators': ['GET', '/orgs/{org}/outside_collaborators'],
  'orgs.orgsConvertMemberToOutsideCollaborator': ['PUT', '/orgs/{org}/outside_collaborators/{username}'],
  'orgs.orgsRemoveOutsideCollaborator': ['DELETE', '/orgs/{org}/outside_collaborators/{username}'],
  'packages.packagesListPackagesForOrganization': ['GET', '/orgs/{org}/packages'],
  'packages.packagesGetPackageForOrganization': ['GET', '/orgs/{org}/packages/{package_type}/{package_name}'],
  'packages.packagesDeletePackageForOrg': ['DELETE', '/orgs/{org}/packages/{package_type}/{package_name}'],
  'packages.packagesRestorePackageForOrg': ['POST', '/orgs/{org}/packages/{package_type}/{package_name}/restore'],
  'packages.packagesGetAllPackageVersionsForPackageOwnedByOrg': [
    'GET',
    '/orgs/{org}/packages/{package_type}/{package_name}/versions'
  ],
  'packages.packagesGetPackageVersionForOrganization': [
    'GET',
    '/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}'
  ],
  'packages.packagesDeletePackageVersionForOrg': [
    'DELETE',
    '/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}'
  ],
  'packages.packagesRestorePackageVersionForOrg': [
    'POST',
    '/orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore'
  ],
  'orgs.orgsListPatGrantRequests': ['GET', '/orgs/{org}/personal-access-token-requests'],
  'orgs.orgsReviewPatGrantRequestsInBulk': ['POST', '/orgs/{org}/personal-access-token-requests'],
  'orgs.orgsReviewPatGrantRequest': ['POST', '/orgs/{org}/personal-access-token-requests/{pat_request_id}'],
  'orgs.orgsListPatGrantRequestRepositories': [
    'GET',
    '/orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories'
  ],
  'orgs.orgsListPatGrants': ['GET', '/orgs/{org}/personal-access-tokens'],
  'orgs.orgsUpdatePatAccesses': ['POST', '/orgs/{org}/personal-access-tokens'],
  'orgs.orgsUpdatePatAccess': ['POST', '/orgs/{org}/personal-access-tokens/{pat_id}'],
  'orgs.orgsListPatGrantRepositories': ['GET', '/orgs/{org}/personal-access-tokens/{pat_id}/repositories'],
  'privateRegistries.privateRegistriesListOrgPrivateRegistries': ['GET', '/orgs/{org}/private-registries'],
  'privateRegistries.privateRegistriesCreateOrgPrivateRegistry': ['POST', '/orgs/{org}/private-registries'],
  'privateRegistries.privateRegistriesGetOrgPublicKey': ['GET', '/orgs/{org}/private-registries/public-key'],
  'privateRegistries.privateRegistriesGetOrgPrivateRegistry': ['GET', '/orgs/{org}/private-registries/{secret_name}'],
  'privateRegistries.privateRegistriesUpdateOrgPrivateRegistry': [
    'PATCH',
    '/orgs/{org}/private-registries/{secret_name}'
  ],
  'privateRegistries.privateRegistriesDeleteOrgPrivateRegistry': [
    'DELETE',
    '/orgs/{org}/private-registries/{secret_name}'
  ],
  'projectsClassic.projectsClassicListForOrg': ['GET', '/orgs/{org}/projects'],
  'projectsClassic.projectsClassicCreateForOrg': ['POST', '/orgs/{org}/projects'],
  'projects.projectsListForOrg': ['GET', '/orgs/{org}/projectsV2'],
  'projects.projectsGetForOrg': ['GET', '/orgs/{org}/projectsV2/{project_number}'],
  'projects.projectsListFieldsForOrg': ['GET', '/orgs/{org}/projectsV2/{project_number}/fields'],
  'projects.projectsGetFieldForOrg': ['GET', '/orgs/{org}/projectsV2/{project_number}/fields/{field_id}'],
  'projects.projectsListItemsForOrg': ['GET', '/orgs/{org}/projectsV2/{project_number}/items'],
  'projects.projectsAddItemForOrg': ['POST', '/orgs/{org}/projectsV2/{project_number}/items'],
  'projects.projectsGetOrgItem': ['GET', '/orgs/{org}/projectsV2/{project_number}/items/{item_id}'],
  'projects.projectsUpdateItemForOrg': ['PATCH', '/orgs/{org}/projectsV2/{project_number}/items/{item_id}'],
  'projects.projectsDeleteItemForOrg': ['DELETE', '/orgs/{org}/projectsV2/{project_number}/items/{item_id}'],
  'orgs.orgsCustomPropertiesForReposGetOrganizationDefinitions': ['GET', '/orgs/{org}/properties/schema'],
  'orgs.orgsCustomPropertiesForReposCreateOrUpdateOrganizationDefinitions': ['PATCH', '/orgs/{org}/properties/schema'],
  'orgs.orgsCustomPropertiesForReposGetOrganizationDefinition': [
    'GET',
    '/orgs/{org}/properties/schema/{custom_property_name}'
  ],
  'orgs.orgsCustomPropertiesForReposCreateOrUpdateOrganizationDefinition': [
    'PUT',
    '/orgs/{org}/properties/schema/{custom_property_name}'
  ],
  'orgs.orgsCustomPropertiesForReposDeleteOrganizationDefinition': [
    'DELETE',
    '/orgs/{org}/properties/schema/{custom_property_name}'
  ],
  'orgs.orgsCustomPropertiesForReposGetOrganizationValues': ['GET', '/orgs/{org}/properties/values'],
  'orgs.orgsCustomPropertiesForReposCreateOrUpdateOrganizationValues': ['PATCH', '/orgs/{org}/properties/values'],
  'orgs.orgsListPublicMembers': ['GET', '/orgs/{org}/public_members'],
  'orgs.orgsCheckPublicMembershipForUser': ['GET', '/orgs/{org}/public_members/{username}'],
  'orgs.orgsSetPublicMembershipForAuthenticatedUser': ['PUT', '/orgs/{org}/public_members/{username}'],
  'orgs.orgsRemovePublicMembershipForAuthenticatedUser': ['DELETE', '/orgs/{org}/public_members/{username}'],
  'repos.reposListForOrg': ['GET', '/orgs/{org}/repos'],
  'repos.reposCreateInOrg': ['POST', '/orgs/{org}/repos'],
  'repos.reposGetOrgRulesets': ['GET', '/orgs/{org}/rulesets'],
  'repos.reposCreateOrgRuleset': ['POST', '/orgs/{org}/rulesets'],
  'repos.reposGetOrgRuleSuites': ['GET', '/orgs/{org}/rulesets/rule-suites'],
  'repos.reposGetOrgRuleSuite': ['GET', '/orgs/{org}/rulesets/rule-suites/{rule_suite_id}'],
  'repos.reposGetOrgRuleset': ['GET', '/orgs/{org}/rulesets/{ruleset_id}'],
  'repos.reposUpdateOrgRuleset': ['PUT', '/orgs/{org}/rulesets/{ruleset_id}'],
  'repos.reposDeleteOrgRuleset': ['DELETE', '/orgs/{org}/rulesets/{ruleset_id}'],
  'orgs.orgsGetOrgRulesetHistory': ['GET', '/orgs/{org}/rulesets/{ruleset_id}/history'],
  'orgs.orgsGetOrgRulesetVersion': ['GET', '/orgs/{org}/rulesets/{ruleset_id}/history/{version_id}'],
  'secretScanning.secretScanningListAlertsForOrg': ['GET', '/orgs/{org}/secret-scanning/alerts'],
  'secretScanning.secretScanningListOrgPatternConfigs': ['GET', '/orgs/{org}/secret-scanning/pattern-configurations'],
  'secretScanning.secretScanningUpdateOrgPatternConfigs': [
    'PATCH',
    '/orgs/{org}/secret-scanning/pattern-configurations'
  ],
  'securityAdvisories.securityAdvisoriesListOrgRepositoryAdvisories': ['GET', '/orgs/{org}/security-advisories'],
  'orgs.orgsListSecurityManagerTeams': ['GET', '/orgs/{org}/security-managers'],
  'orgs.orgsAddSecurityManagerTeam': ['PUT', '/orgs/{org}/security-managers/teams/{team_slug}'],
  'orgs.orgsRemoveSecurityManagerTeam': ['DELETE', '/orgs/{org}/security-managers/teams/{team_slug}'],
  'billing.billingGetGithubActionsBillingOrg': ['GET', '/orgs/{org}/settings/billing/actions'],
  'billing.billingGetGithubPackagesBillingOrg': ['GET', '/orgs/{org}/settings/billing/packages'],
  'billing.billingGetSharedStorageBillingOrg': ['GET', '/orgs/{org}/settings/billing/shared-storage'],
  'orgs.orgsGetImmutableReleasesSettings': ['GET', '/orgs/{org}/settings/immutable-releases'],
  'orgs.orgsSetImmutableReleasesSettings': ['PUT', '/orgs/{org}/settings/immutable-releases'],
  'orgs.orgsGetImmutableReleasesSettingsRepositories': ['GET', '/orgs/{org}/settings/immutable-releases/repositories'],
  'orgs.orgsSetImmutableReleasesSettingsRepositories': ['PUT', '/orgs/{org}/settings/immutable-releases/repositories'],
  'orgs.orgsEnableSelectedRepositoryImmutableReleasesOrganization': [
    'PUT',
    '/orgs/{org}/settings/immutable-releases/repositories/{repository_id}'
  ],
  'orgs.orgsDisableSelectedRepositoryImmutableReleasesOrganization': [
    'DELETE',
    '/orgs/{org}/settings/immutable-releases/repositories/{repository_id}'
  ],
  'hostedCompute.hostedComputeListNetworkConfigurationsForOrg': ['GET', '/orgs/{org}/settings/network-configurations'],
  'hostedCompute.hostedComputeCreateNetworkConfigurationForOrg': [
    'POST',
    '/orgs/{org}/settings/network-configurations'
  ],
  'hostedCompute.hostedComputeGetNetworkConfigurationForOrg': [
    'GET',
    '/orgs/{org}/settings/network-configurations/{network_configuration_id}'
  ],
  'hostedCompute.hostedComputeUpdateNetworkConfigurationForOrg': [
    'PATCH',
    '/orgs/{org}/settings/network-configurations/{network_configuration_id}'
  ],
  'hostedCompute.hostedComputeDeleteNetworkConfigurationFromOrg': [
    'DELETE',
    '/orgs/{org}/settings/network-configurations/{network_configuration_id}'
  ],
  'hostedCompute.hostedComputeGetNetworkSettingsForOrg': [
    'GET',
    '/orgs/{org}/settings/network-settings/{network_settings_id}'
  ],
  'copilot.copilotCopilotMetricsForTeam': ['GET', '/orgs/{org}/team/{team_slug}/copilot/metrics'],
  'teams.teamsList': ['GET', '/orgs/{org}/teams'],
  'teams.teamsCreate': ['POST', '/orgs/{org}/teams'],
  'teams.teamsGetByName': ['GET', '/orgs/{org}/teams/{team_slug}'],
  'teams.teamsUpdateInOrg': ['PATCH', '/orgs/{org}/teams/{team_slug}'],
  'teams.teamsDeleteInOrg': ['DELETE', '/orgs/{org}/teams/{team_slug}'],
  'teams.teamsListDiscussionsInOrg': ['GET', '/orgs/{org}/teams/{team_slug}/discussions'],
  'teams.teamsCreateDiscussionInOrg': ['POST', '/orgs/{org}/teams/{team_slug}/discussions'],
  'teams.teamsGetDiscussionInOrg': ['GET', '/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}'],
  'teams.teamsUpdateDiscussionInOrg': ['PATCH', '/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}'],
  'teams.teamsDeleteDiscussionInOrg': ['DELETE', '/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}'],
  'teams.teamsListDiscussionCommentsInOrg': [
    'GET',
    '/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments'
  ],
  'teams.teamsCreateDiscussionCommentInOrg': [
    'POST',
    '/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments'
  ],
  'teams.teamsGetDiscussionCommentInOrg': [
    'GET',
    '/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}'
  ],
  'teams.teamsUpdateDiscussionCommentInOrg': [
    'PATCH',
    '/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}'
  ],
  'teams.teamsDeleteDiscussionCommentInOrg': [
    'DELETE',
    '/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}'
  ],
  'reactions.reactionsListForTeamDiscussionCommentInOrg': [
    'GET',
    '/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions'
  ],
  'reactions.reactionsCreateForTeamDiscussionCommentInOrg': [
    'POST',
    '/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions'
  ],
  'reactions.reactionsDeleteForTeamDiscussionComment': [
    'DELETE',
    '/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}'
  ],
  'reactions.reactionsListForTeamDiscussionInOrg': [
    'GET',
    '/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions'
  ],
  'reactions.reactionsCreateForTeamDiscussionInOrg': [
    'POST',
    '/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions'
  ],
  'reactions.reactionsDeleteForTeamDiscussion': [
    'DELETE',
    '/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}'
  ],
  'teams.teamsListPendingInvitationsInOrg': ['GET', '/orgs/{org}/teams/{team_slug}/invitations'],
  'teams.teamsListMembersInOrg': ['GET', '/orgs/{org}/teams/{team_slug}/members'],
  'teams.teamsGetMembershipForUserInOrg': ['GET', '/orgs/{org}/teams/{team_slug}/memberships/{username}'],
  'teams.teamsAddOrUpdateMembershipForUserInOrg': ['PUT', '/orgs/{org}/teams/{team_slug}/memberships/{username}'],
  'teams.teamsRemoveMembershipForUserInOrg': ['DELETE', '/orgs/{org}/teams/{team_slug}/memberships/{username}'],
  'teams.teamsListProjectsInOrg': ['GET', '/orgs/{org}/teams/{team_slug}/projects'],
  'teams.teamsCheckPermissionsForProjectInOrg': ['GET', '/orgs/{org}/teams/{team_slug}/projects/{project_id}'],
  'teams.teamsAddOrUpdateProjectPermissionsInOrg': ['PUT', '/orgs/{org}/teams/{team_slug}/projects/{project_id}'],
  'teams.teamsRemoveProjectInOrg': ['DELETE', '/orgs/{org}/teams/{team_slug}/projects/{project_id}'],
  'teams.teamsListReposInOrg': ['GET', '/orgs/{org}/teams/{team_slug}/repos'],
  'teams.teamsCheckPermissionsForRepoInOrg': ['GET', '/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}'],
  'teams.teamsAddOrUpdateRepoPermissionsInOrg': ['PUT', '/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}'],
  'teams.teamsRemoveRepoInOrg': ['DELETE', '/orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}'],
  'teams.teamsListChildInOrg': ['GET', '/orgs/{org}/teams/{team_slug}/teams'],
  'orgs.orgsEnableOrDisableSecurityProductOnAllOrgRepos': ['POST', '/orgs/{org}/{security_product}/{enablement}'],
  'projectsClassic.projectsClassicGetColumn': ['GET', '/projects/columns/{column_id}'],
  'projectsClassic.projectsClassicUpdateColumn': ['PATCH', '/projects/columns/{column_id}'],
  'projectsClassic.projectsClassicDeleteColumn': ['DELETE', '/projects/columns/{column_id}'],
  'projectsClassic.projectsClassicMoveColumn': ['POST', '/projects/columns/{column_id}/moves'],
  'projectsClassic.projectsClassicGet': ['GET', '/projects/{project_id}'],
  'projectsClassic.projectsClassicUpdate': ['PATCH', '/projects/{project_id}'],
  'projectsClassic.projectsClassicDelete': ['DELETE', '/projects/{project_id}'],
  'projectsClassic.projectsClassicListCollaborators': ['GET', '/projects/{project_id}/collaborators'],
  'projectsClassic.projectsClassicAddCollaborator': ['PUT', '/projects/{project_id}/collaborators/{username}'],
  'projectsClassic.projectsClassicRemoveCollaborator': ['DELETE', '/projects/{project_id}/collaborators/{username}'],
  'projectsClassic.projectsClassicGetPermissionForUser': [
    'GET',
    '/projects/{project_id}/collaborators/{username}/permission'
  ],
  'projectsClassic.projectsClassicListColumns': ['GET', '/projects/{project_id}/columns'],
  'projectsClassic.projectsClassicCreateColumn': ['POST', '/projects/{project_id}/columns'],
  'rateLimit.rateLimitGet': ['GET', '/rate_limit'],
  'repos.reposGet': ['GET', '/repos/{owner}/{repo}'],
  'repos.reposUpdate': ['PATCH', '/repos/{owner}/{repo}'],
  'repos.reposDelete': ['DELETE', '/repos/{owner}/{repo}'],
  'actions.actionsListArtifactsForRepo': ['GET', '/repos/{owner}/{repo}/actions/artifacts'],
  'actions.actionsGetArtifact': ['GET', '/repos/{owner}/{repo}/actions/artifacts/{artifact_id}'],
  'actions.actionsDeleteArtifact': ['DELETE', '/repos/{owner}/{repo}/actions/artifacts/{artifact_id}'],
  'actions.actionsDownloadArtifact': ['GET', '/repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}'],
  'actions.actionsGetActionsCacheUsage': ['GET', '/repos/{owner}/{repo}/actions/cache/usage'],
  'actions.actionsGetActionsCacheList': ['GET', '/repos/{owner}/{repo}/actions/caches'],
  'actions.actionsDeleteActionsCacheByKey': ['DELETE', '/repos/{owner}/{repo}/actions/caches'],
  'actions.actionsDeleteActionsCacheById': ['DELETE', '/repos/{owner}/{repo}/actions/caches/{cache_id}'],
  'actions.actionsGetJobForWorkflowRun': ['GET', '/repos/{owner}/{repo}/actions/jobs/{job_id}'],
  'actions.actionsDownloadJobLogsForWorkflowRun': ['GET', '/repos/{owner}/{repo}/actions/jobs/{job_id}/logs'],
  'actions.actionsReRunJobForWorkflowRun': ['POST', '/repos/{owner}/{repo}/actions/jobs/{job_id}/rerun'],
  'actions.actionsGetCustomOidcSubClaimForRepo': ['GET', '/repos/{owner}/{repo}/actions/oidc/customization/sub'],
  'actions.actionsSetCustomOidcSubClaimForRepo': ['PUT', '/repos/{owner}/{repo}/actions/oidc/customization/sub'],
  'actions.actionsListRepoOrganizationSecrets': ['GET', '/repos/{owner}/{repo}/actions/organization-secrets'],
  'actions.actionsListRepoOrganizationVariables': ['GET', '/repos/{owner}/{repo}/actions/organization-variables'],
  'actions.actionsGetGithubActionsPermissionsRepository': ['GET', '/repos/{owner}/{repo}/actions/permissions'],
  'actions.actionsSetGithubActionsPermissionsRepository': ['PUT', '/repos/{owner}/{repo}/actions/permissions'],
  'actions.actionsGetWorkflowAccessToRepository': ['GET', '/repos/{owner}/{repo}/actions/permissions/access'],
  'actions.actionsSetWorkflowAccessToRepository': ['PUT', '/repos/{owner}/{repo}/actions/permissions/access'],
  'actions.actionsGetArtifactAndLogRetentionSettingsRepository': [
    'GET',
    '/repos/{owner}/{repo}/actions/permissions/artifact-and-log-retention'
  ],
  'actions.actionsSetArtifactAndLogRetentionSettingsRepository': [
    'PUT',
    '/repos/{owner}/{repo}/actions/permissions/artifact-and-log-retention'
  ],
  'actions.actionsGetForkPrContributorApprovalPermissionsRepository': [
    'GET',
    '/repos/{owner}/{repo}/actions/permissions/fork-pr-contributor-approval'
  ],
  'actions.actionsSetForkPrContributorApprovalPermissionsRepository': [
    'PUT',
    '/repos/{owner}/{repo}/actions/permissions/fork-pr-contributor-approval'
  ],
  'actions.actionsGetPrivateRepoForkPrWorkflowsSettingsRepository': [
    'GET',
    '/repos/{owner}/{repo}/actions/permissions/fork-pr-workflows-private-repos'
  ],
  'actions.actionsSetPrivateRepoForkPrWorkflowsSettingsRepository': [
    'PUT',
    '/repos/{owner}/{repo}/actions/permissions/fork-pr-workflows-private-repos'
  ],
  'actions.actionsGetAllowedActionsRepository': ['GET', '/repos/{owner}/{repo}/actions/permissions/selected-actions'],
  'actions.actionsSetAllowedActionsRepository': ['PUT', '/repos/{owner}/{repo}/actions/permissions/selected-actions'],
  'actions.actionsGetGithubActionsDefaultWorkflowPermissionsRepository': [
    'GET',
    '/repos/{owner}/{repo}/actions/permissions/workflow'
  ],
  'actions.actionsSetGithubActionsDefaultWorkflowPermissionsRepository': [
    'PUT',
    '/repos/{owner}/{repo}/actions/permissions/workflow'
  ],
  'actions.actionsListSelfHostedRunnersForRepo': ['GET', '/repos/{owner}/{repo}/actions/runners'],
  'actions.actionsListRunnerApplicationsForRepo': ['GET', '/repos/{owner}/{repo}/actions/runners/downloads'],
  'actions.actionsGenerateRunnerJitconfigForRepo': ['POST', '/repos/{owner}/{repo}/actions/runners/generate-jitconfig'],
  'actions.actionsCreateRegistrationTokenForRepo': ['POST', '/repos/{owner}/{repo}/actions/runners/registration-token'],
  'actions.actionsCreateRemoveTokenForRepo': ['POST', '/repos/{owner}/{repo}/actions/runners/remove-token'],
  'actions.actionsGetSelfHostedRunnerForRepo': ['GET', '/repos/{owner}/{repo}/actions/runners/{runner_id}'],
  'actions.actionsDeleteSelfHostedRunnerFromRepo': ['DELETE', '/repos/{owner}/{repo}/actions/runners/{runner_id}'],
  'actions.actionsListLabelsForSelfHostedRunnerForRepo': [
    'GET',
    '/repos/{owner}/{repo}/actions/runners/{runner_id}/labels'
  ],
  'actions.actionsAddCustomLabelsToSelfHostedRunnerForRepo': [
    'POST',
    '/repos/{owner}/{repo}/actions/runners/{runner_id}/labels'
  ],
  'actions.actionsSetCustomLabelsForSelfHostedRunnerForRepo': [
    'PUT',
    '/repos/{owner}/{repo}/actions/runners/{runner_id}/labels'
  ],
  'actions.actionsRemoveAllCustomLabelsFromSelfHostedRunnerForRepo': [
    'DELETE',
    '/repos/{owner}/{repo}/actions/runners/{runner_id}/labels'
  ],
  'actions.actionsRemoveCustomLabelFromSelfHostedRunnerForRepo': [
    'DELETE',
    '/repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}'
  ],
  'actions.actionsListWorkflowRunsForRepo': ['GET', '/repos/{owner}/{repo}/actions/runs'],
  'actions.actionsGetWorkflowRun': ['GET', '/repos/{owner}/{repo}/actions/runs/{run_id}'],
  'actions.actionsDeleteWorkflowRun': ['DELETE', '/repos/{owner}/{repo}/actions/runs/{run_id}'],
  'actions.actionsGetReviewsForRun': ['GET', '/repos/{owner}/{repo}/actions/runs/{run_id}/approvals'],
  'actions.actionsApproveWorkflowRun': ['POST', '/repos/{owner}/{repo}/actions/runs/{run_id}/approve'],
  'actions.actionsListWorkflowRunArtifacts': ['GET', '/repos/{owner}/{repo}/actions/runs/{run_id}/artifacts'],
  'actions.actionsGetWorkflowRunAttempt': [
    'GET',
    '/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}'
  ],
  'actions.actionsListJobsForWorkflowRunAttempt': [
    'GET',
    '/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs'
  ],
  'actions.actionsDownloadWorkflowRunAttemptLogs': [
    'GET',
    '/repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs'
  ],
  'actions.actionsCancelWorkflowRun': ['POST', '/repos/{owner}/{repo}/actions/runs/{run_id}/cancel'],
  'actions.actionsReviewCustomGatesForRun': [
    'POST',
    '/repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule'
  ],
  'actions.actionsForceCancelWorkflowRun': ['POST', '/repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel'],
  'actions.actionsListJobsForWorkflowRun': ['GET', '/repos/{owner}/{repo}/actions/runs/{run_id}/jobs'],
  'actions.actionsDownloadWorkflowRunLogs': ['GET', '/repos/{owner}/{repo}/actions/runs/{run_id}/logs'],
  'actions.actionsDeleteWorkflowRunLogs': ['DELETE', '/repos/{owner}/{repo}/actions/runs/{run_id}/logs'],
  'actions.actionsGetPendingDeploymentsForRun': [
    'GET',
    '/repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments'
  ],
  'actions.actionsReviewPendingDeploymentsForRun': [
    'POST',
    '/repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments'
  ],
  'actions.actionsReRunWorkflow': ['POST', '/repos/{owner}/{repo}/actions/runs/{run_id}/rerun'],
  'actions.actionsReRunWorkflowFailedJobs': ['POST', '/repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs'],
  'actions.actionsGetWorkflowRunUsage': ['GET', '/repos/{owner}/{repo}/actions/runs/{run_id}/timing'],
  'actions.actionsListRepoSecrets': ['GET', '/repos/{owner}/{repo}/actions/secrets'],
  'actions.actionsGetRepoPublicKey': ['GET', '/repos/{owner}/{repo}/actions/secrets/public-key'],
  'actions.actionsGetRepoSecret': ['GET', '/repos/{owner}/{repo}/actions/secrets/{secret_name}'],
  'actions.actionsCreateOrUpdateRepoSecret': ['PUT', '/repos/{owner}/{repo}/actions/secrets/{secret_name}'],
  'actions.actionsDeleteRepoSecret': ['DELETE', '/repos/{owner}/{repo}/actions/secrets/{secret_name}'],
  'actions.actionsListRepoVariables': ['GET', '/repos/{owner}/{repo}/actions/variables'],
  'actions.actionsCreateRepoVariable': ['POST', '/repos/{owner}/{repo}/actions/variables'],
  'actions.actionsGetRepoVariable': ['GET', '/repos/{owner}/{repo}/actions/variables/{name}'],
  'actions.actionsUpdateRepoVariable': ['PATCH', '/repos/{owner}/{repo}/actions/variables/{name}'],
  'actions.actionsDeleteRepoVariable': ['DELETE', '/repos/{owner}/{repo}/actions/variables/{name}'],
  'actions.actionsListRepoWorkflows': ['GET', '/repos/{owner}/{repo}/actions/workflows'],
  'actions.actionsGetWorkflow': ['GET', '/repos/{owner}/{repo}/actions/workflows/{workflow_id}'],
  'actions.actionsDisableWorkflow': ['PUT', '/repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable'],
  'actions.actionsCreateWorkflowDispatch': ['POST', '/repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches'],
  'actions.actionsEnableWorkflow': ['PUT', '/repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable'],
  'actions.actionsListWorkflowRuns': ['GET', '/repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs'],
  'actions.actionsGetWorkflowUsage': ['GET', '/repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing'],
  'repos.reposListActivities': ['GET', '/repos/{owner}/{repo}/activity'],
  'issues.issuesListAssignees': ['GET', '/repos/{owner}/{repo}/assignees'],
  'issues.issuesCheckUserCanBeAssigned': ['GET', '/repos/{owner}/{repo}/assignees/{assignee}'],
  'repos.reposCreateAttestation': ['POST', '/repos/{owner}/{repo}/attestations'],
  'repos.reposListAttestations': ['GET', '/repos/{owner}/{repo}/attestations/{subject_digest}'],
  'repos.reposListAutolinks': ['GET', '/repos/{owner}/{repo}/autolinks'],
  'repos.reposCreateAutolink': ['POST', '/repos/{owner}/{repo}/autolinks'],
  'repos.reposGetAutolink': ['GET', '/repos/{owner}/{repo}/autolinks/{autolink_id}'],
  'repos.reposDeleteAutolink': ['DELETE', '/repos/{owner}/{repo}/autolinks/{autolink_id}'],
  'repos.reposCheckAutomatedSecurityFixes': ['GET', '/repos/{owner}/{repo}/automated-security-fixes'],
  'repos.reposEnableAutomatedSecurityFixes': ['PUT', '/repos/{owner}/{repo}/automated-security-fixes'],
  'repos.reposDisableAutomatedSecurityFixes': ['DELETE', '/repos/{owner}/{repo}/automated-security-fixes'],
  'repos.reposListBranches': ['GET', '/repos/{owner}/{repo}/branches'],
  'repos.reposGetBranch': ['GET', '/repos/{owner}/{repo}/branches/{branch}'],
  'repos.reposGetBranchProtection': ['GET', '/repos/{owner}/{repo}/branches/{branch}/protection'],
  'repos.reposUpdateBranchProtection': ['PUT', '/repos/{owner}/{repo}/branches/{branch}/protection'],
  'repos.reposDeleteBranchProtection': ['DELETE', '/repos/{owner}/{repo}/branches/{branch}/protection'],
  'repos.reposGetAdminBranchProtection': ['GET', '/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins'],
  'repos.reposSetAdminBranchProtection': ['POST', '/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins'],
  'repos.reposDeleteAdminBranchProtection': [
    'DELETE',
    '/repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins'
  ],
  'repos.reposGetPullRequestReviewProtection': [
    'GET',
    '/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews'
  ],
  'repos.reposUpdatePullRequestReviewProtection': [
    'PATCH',
    '/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews'
  ],
  'repos.reposDeletePullRequestReviewProtection': [
    'DELETE',
    '/repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews'
  ],
  'repos.reposGetCommitSignatureProtection': [
    'GET',
    '/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures'
  ],
  'repos.reposCreateCommitSignatureProtection': [
    'POST',
    '/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures'
  ],
  'repos.reposDeleteCommitSignatureProtection': [
    'DELETE',
    '/repos/{owner}/{repo}/branches/{branch}/protection/required_signatures'
  ],
  'repos.reposGetStatusChecksProtection': [
    'GET',
    '/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks'
  ],
  'repos.reposUpdateStatusCheckProtection': [
    'PATCH',
    '/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks'
  ],
  'repos.reposRemoveStatusCheckProtection': [
    'DELETE',
    '/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks'
  ],
  'repos.reposGetAllStatusCheckContexts': [
    'GET',
    '/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts'
  ],
  'repos.reposAddStatusCheckContexts': [
    'POST',
    '/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts'
  ],
  'repos.reposSetStatusCheckContexts': [
    'PUT',
    '/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts'
  ],
  'repos.reposRemoveStatusCheckContexts': [
    'DELETE',
    '/repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts'
  ],
  'repos.reposGetAccessRestrictions': ['GET', '/repos/{owner}/{repo}/branches/{branch}/protection/restrictions'],
  'repos.reposDeleteAccessRestrictions': ['DELETE', '/repos/{owner}/{repo}/branches/{branch}/protection/restrictions'],
  'repos.reposGetAppsWithAccessToProtectedBranch': [
    'GET',
    '/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps'
  ],
  'repos.reposAddAppAccessRestrictions': [
    'POST',
    '/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps'
  ],
  'repos.reposSetAppAccessRestrictions': [
    'PUT',
    '/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps'
  ],
  'repos.reposRemoveAppAccessRestrictions': [
    'DELETE',
    '/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps'
  ],
  'repos.reposGetTeamsWithAccessToProtectedBranch': [
    'GET',
    '/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams'
  ],
  'repos.reposAddTeamAccessRestrictions': [
    'POST',
    '/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams'
  ],
  'repos.reposSetTeamAccessRestrictions': [
    'PUT',
    '/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams'
  ],
  'repos.reposRemoveTeamAccessRestrictions': [
    'DELETE',
    '/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams'
  ],
  'repos.reposGetUsersWithAccessToProtectedBranch': [
    'GET',
    '/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users'
  ],
  'repos.reposAddUserAccessRestrictions': [
    'POST',
    '/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users'
  ],
  'repos.reposSetUserAccessRestrictions': [
    'PUT',
    '/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users'
  ],
  'repos.reposRemoveUserAccessRestrictions': [
    'DELETE',
    '/repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users'
  ],
  'repos.reposRenameBranch': ['POST', '/repos/{owner}/{repo}/branches/{branch}/rename'],
  'checks.checksCreate': ['POST', '/repos/{owner}/{repo}/check-runs'],
  'checks.checksGet': ['GET', '/repos/{owner}/{repo}/check-runs/{check_run_id}'],
  'checks.checksUpdate': ['PATCH', '/repos/{owner}/{repo}/check-runs/{check_run_id}'],
  'checks.checksListAnnotations': ['GET', '/repos/{owner}/{repo}/check-runs/{check_run_id}/annotations'],
  'checks.checksRerequestRun': ['POST', '/repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest'],
  'checks.checksCreateSuite': ['POST', '/repos/{owner}/{repo}/check-suites'],
  'checks.checksSetSuitesPreferences': ['PATCH', '/repos/{owner}/{repo}/check-suites/preferences'],
  'checks.checksGetSuite': ['GET', '/repos/{owner}/{repo}/check-suites/{check_suite_id}'],
  'checks.checksListForSuite': ['GET', '/repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs'],
  'checks.checksRerequestSuite': ['POST', '/repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest'],
  'codeScanning.codeScanningListAlertsForRepo': ['GET', '/repos/{owner}/{repo}/code-scanning/alerts'],
  'codeScanning.codeScanningGetAlert': ['GET', '/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}'],
  'codeScanning.codeScanningUpdateAlert': ['PATCH', '/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}'],
  'codeScanning.codeScanningGetAutofix': ['GET', '/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix'],
  'codeScanning.codeScanningCreateAutofix': [
    'POST',
    '/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix'
  ],
  'codeScanning.codeScanningCommitAutofix': [
    'POST',
    '/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/autofix/commits'
  ],
  'codeScanning.codeScanningListAlertInstances': [
    'GET',
    '/repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances'
  ],
  'codeScanning.codeScanningListRecentAnalyses': ['GET', '/repos/{owner}/{repo}/code-scanning/analyses'],
  'codeScanning.codeScanningGetAnalysis': ['GET', '/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}'],
  'codeScanning.codeScanningDeleteAnalysis': ['DELETE', '/repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}'],
  'codeScanning.codeScanningListCodeqlDatabases': ['GET', '/repos/{owner}/{repo}/code-scanning/codeql/databases'],
  'codeScanning.codeScanningGetCodeqlDatabase': [
    'GET',
    '/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}'
  ],
  'codeScanning.codeScanningDeleteCodeqlDatabase': [
    'DELETE',
    '/repos/{owner}/{repo}/code-scanning/codeql/databases/{language}'
  ],
  'codeScanning.codeScanningCreateVariantAnalysis': [
    'POST',
    '/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses'
  ],
  'codeScanning.codeScanningGetVariantAnalysis': [
    'GET',
    '/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}'
  ],
  'codeScanning.codeScanningGetVariantAnalysisRepoTask': [
    'GET',
    '/repos/{owner}/{repo}/code-scanning/codeql/variant-analyses/{codeql_variant_analysis_id}/repos/{repo_owner}/{repo_name}'
  ],
  'codeScanning.codeScanningGetDefaultSetup': ['GET', '/repos/{owner}/{repo}/code-scanning/default-setup'],
  'codeScanning.codeScanningUpdateDefaultSetup': ['PATCH', '/repos/{owner}/{repo}/code-scanning/default-setup'],
  'codeScanning.codeScanningUploadSarif': ['POST', '/repos/{owner}/{repo}/code-scanning/sarifs'],
  'codeScanning.codeScanningGetSarif': ['GET', '/repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}'],
  'codeSecurity.codeSecurityGetConfigurationForRepository': [
    'GET',
    '/repos/{owner}/{repo}/code-security-configuration'
  ],
  'repos.reposCodeownersErrors': ['GET', '/repos/{owner}/{repo}/codeowners/errors'],
  'codespaces.codespacesListInRepositoryForAuthenticatedUser': ['GET', '/repos/{owner}/{repo}/codespaces'],
  'codespaces.codespacesCreateWithRepoForAuthenticatedUser': ['POST', '/repos/{owner}/{repo}/codespaces'],
  'codespaces.codespacesListDevcontainersInRepositoryForAuthenticatedUser': [
    'GET',
    '/repos/{owner}/{repo}/codespaces/devcontainers'
  ],
  'codespaces.codespacesRepoMachinesForAuthenticatedUser': ['GET', '/repos/{owner}/{repo}/codespaces/machines'],
  'codespaces.codespacesPreFlightWithRepoForAuthenticatedUser': ['GET', '/repos/{owner}/{repo}/codespaces/new'],
  'codespaces.codespacesCheckPermissionsForDevcontainer': ['GET', '/repos/{owner}/{repo}/codespaces/permissions_check'],
  'codespaces.codespacesListRepoSecrets': ['GET', '/repos/{owner}/{repo}/codespaces/secrets'],
  'codespaces.codespacesGetRepoPublicKey': ['GET', '/repos/{owner}/{repo}/codespaces/secrets/public-key'],
  'codespaces.codespacesGetRepoSecret': ['GET', '/repos/{owner}/{repo}/codespaces/secrets/{secret_name}'],
  'codespaces.codespacesCreateOrUpdateRepoSecret': ['PUT', '/repos/{owner}/{repo}/codespaces/secrets/{secret_name}'],
  'codespaces.codespacesDeleteRepoSecret': ['DELETE', '/repos/{owner}/{repo}/codespaces/secrets/{secret_name}'],
  'repos.reposListCollaborators': ['GET', '/repos/{owner}/{repo}/collaborators'],
  'repos.reposCheckCollaborator': ['GET', '/repos/{owner}/{repo}/collaborators/{username}'],
  'repos.reposAddCollaborator': ['PUT', '/repos/{owner}/{repo}/collaborators/{username}'],
  'repos.reposRemoveCollaborator': ['DELETE', '/repos/{owner}/{repo}/collaborators/{username}'],
  'repos.reposGetCollaboratorPermissionLevel': ['GET', '/repos/{owner}/{repo}/collaborators/{username}/permission'],
  'repos.reposListCommitCommentsForRepo': ['GET', '/repos/{owner}/{repo}/comments'],
  'repos.reposGetCommitComment': ['GET', '/repos/{owner}/{repo}/comments/{comment_id}'],
  'repos.reposUpdateCommitComment': ['PATCH', '/repos/{owner}/{repo}/comments/{comment_id}'],
  'repos.reposDeleteCommitComment': ['DELETE', '/repos/{owner}/{repo}/comments/{comment_id}'],
  'reactions.reactionsListForCommitComment': ['GET', '/repos/{owner}/{repo}/comments/{comment_id}/reactions'],
  'reactions.reactionsCreateForCommitComment': ['POST', '/repos/{owner}/{repo}/comments/{comment_id}/reactions'],
  'reactions.reactionsDeleteForCommitComment': [
    'DELETE',
    '/repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}'
  ],
  'repos.reposListCommits': ['GET', '/repos/{owner}/{repo}/commits'],
  'repos.reposListBranchesForHeadCommit': ['GET', '/repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head'],
  'repos.reposListCommentsForCommit': ['GET', '/repos/{owner}/{repo}/commits/{commit_sha}/comments'],
  'repos.reposCreateCommitComment': ['POST', '/repos/{owner}/{repo}/commits/{commit_sha}/comments'],
  'repos.reposListPullRequestsAssociatedWithCommit': ['GET', '/repos/{owner}/{repo}/commits/{commit_sha}/pulls'],
  'repos.reposGetCommit': ['GET', '/repos/{owner}/{repo}/commits/{ref}'],
  'checks.checksListForRef': ['GET', '/repos/{owner}/{repo}/commits/{ref}/check-runs'],
  'checks.checksListSuitesForRef': ['GET', '/repos/{owner}/{repo}/commits/{ref}/check-suites'],
  'repos.reposGetCombinedStatusForRef': ['GET', '/repos/{owner}/{repo}/commits/{ref}/status'],
  'repos.reposListCommitStatusesForRef': ['GET', '/repos/{owner}/{repo}/commits/{ref}/statuses'],
  'repos.reposGetCommunityProfileMetrics': ['GET', '/repos/{owner}/{repo}/community/profile'],
  'repos.reposCompareCommits': ['GET', '/repos/{owner}/{repo}/compare/{basehead}'],
  'repos.reposGetContent': ['GET', '/repos/{owner}/{repo}/contents/{path}'],
  'repos.reposCreateOrUpdateFileContents': ['PUT', '/repos/{owner}/{repo}/contents/{path}'],
  'repos.reposDeleteFile': ['DELETE', '/repos/{owner}/{repo}/contents/{path}'],
  'repos.reposListContributors': ['GET', '/repos/{owner}/{repo}/contributors'],
  'dependabot.dependabotListAlertsForRepo': ['GET', '/repos/{owner}/{repo}/dependabot/alerts'],
  'dependabot.dependabotGetAlert': ['GET', '/repos/{owner}/{repo}/dependabot/alerts/{alert_number}'],
  'dependabot.dependabotUpdateAlert': ['PATCH', '/repos/{owner}/{repo}/dependabot/alerts/{alert_number}'],
  'dependabot.dependabotListRepoSecrets': ['GET', '/repos/{owner}/{repo}/dependabot/secrets'],
  'dependabot.dependabotGetRepoPublicKey': ['GET', '/repos/{owner}/{repo}/dependabot/secrets/public-key'],
  'dependabot.dependabotGetRepoSecret': ['GET', '/repos/{owner}/{repo}/dependabot/secrets/{secret_name}'],
  'dependabot.dependabotCreateOrUpdateRepoSecret': ['PUT', '/repos/{owner}/{repo}/dependabot/secrets/{secret_name}'],
  'dependabot.dependabotDeleteRepoSecret': ['DELETE', '/repos/{owner}/{repo}/dependabot/secrets/{secret_name}'],
  'dependencyGraph.dependencyGraphDiffRange': ['GET', '/repos/{owner}/{repo}/dependency-graph/compare/{basehead}'],
  'dependencyGraph.dependencyGraphExportSbom': ['GET', '/repos/{owner}/{repo}/dependency-graph/sbom'],
  'dependencyGraph.dependencyGraphCreateRepositorySnapshot': [
    'POST',
    '/repos/{owner}/{repo}/dependency-graph/snapshots'
  ],
  'repos.reposListDeployments': ['GET', '/repos/{owner}/{repo}/deployments'],
  'repos.reposCreateDeployment': ['POST', '/repos/{owner}/{repo}/deployments'],
  'repos.reposGetDeployment': ['GET', '/repos/{owner}/{repo}/deployments/{deployment_id}'],
  'repos.reposDeleteDeployment': ['DELETE', '/repos/{owner}/{repo}/deployments/{deployment_id}'],
  'repos.reposListDeploymentStatuses': ['GET', '/repos/{owner}/{repo}/deployments/{deployment_id}/statuses'],
  'repos.reposCreateDeploymentStatus': ['POST', '/repos/{owner}/{repo}/deployments/{deployment_id}/statuses'],
  'repos.reposGetDeploymentStatus': ['GET', '/repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}'],
  'repos.reposCreateDispatchEvent': ['POST', '/repos/{owner}/{repo}/dispatches'],
  'repos.reposGetAllEnvironments': ['GET', '/repos/{owner}/{repo}/environments'],
  'repos.reposGetEnvironment': ['GET', '/repos/{owner}/{repo}/environments/{environment_name}'],
  'repos.reposCreateOrUpdateEnvironment': ['PUT', '/repos/{owner}/{repo}/environments/{environment_name}'],
  'repos.reposDeleteAnEnvironment': ['DELETE', '/repos/{owner}/{repo}/environments/{environment_name}'],
  'repos.reposListDeploymentBranchPolicies': [
    'GET',
    '/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies'
  ],
  'repos.reposCreateDeploymentBranchPolicy': [
    'POST',
    '/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies'
  ],
  'repos.reposGetDeploymentBranchPolicy': [
    'GET',
    '/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}'
  ],
  'repos.reposUpdateDeploymentBranchPolicy': [
    'PUT',
    '/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}'
  ],
  'repos.reposDeleteDeploymentBranchPolicy': [
    'DELETE',
    '/repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}'
  ],
  'repos.reposGetAllDeploymentProtectionRules': [
    'GET',
    '/repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules'
  ],
  'repos.reposCreateDeploymentProtectionRule': [
    'POST',
    '/repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules'
  ],
  'repos.reposListCustomDeploymentRuleIntegrations': [
    'GET',
    '/repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps'
  ],
  'repos.reposGetCustomDeploymentProtectionRule': [
    'GET',
    '/repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}'
  ],
  'repos.reposDisableDeploymentProtectionRule': [
    'DELETE',
    '/repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}'
  ],
  'actions.actionsListEnvironmentSecrets': ['GET', '/repos/{owner}/{repo}/environments/{environment_name}/secrets'],
  'actions.actionsGetEnvironmentPublicKey': [
    'GET',
    '/repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key'
  ],
  'actions.actionsGetEnvironmentSecret': [
    'GET',
    '/repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}'
  ],
  'actions.actionsCreateOrUpdateEnvironmentSecret': [
    'PUT',
    '/repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}'
  ],
  'actions.actionsDeleteEnvironmentSecret': [
    'DELETE',
    '/repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}'
  ],
  'actions.actionsListEnvironmentVariables': ['GET', '/repos/{owner}/{repo}/environments/{environment_name}/variables'],
  'actions.actionsCreateEnvironmentVariable': [
    'POST',
    '/repos/{owner}/{repo}/environments/{environment_name}/variables'
  ],
  'actions.actionsGetEnvironmentVariable': [
    'GET',
    '/repos/{owner}/{repo}/environments/{environment_name}/variables/{name}'
  ],
  'actions.actionsUpdateEnvironmentVariable': [
    'PATCH',
    '/repos/{owner}/{repo}/environments/{environment_name}/variables/{name}'
  ],
  'actions.actionsDeleteEnvironmentVariable': [
    'DELETE',
    '/repos/{owner}/{repo}/environments/{environment_name}/variables/{name}'
  ],
  'activity.activityListRepoEvents': ['GET', '/repos/{owner}/{repo}/events'],
  'repos.reposListForks': ['GET', '/repos/{owner}/{repo}/forks'],
  'repos.reposCreateFork': ['POST', '/repos/{owner}/{repo}/forks'],
  'git.gitCreateBlob': ['POST', '/repos/{owner}/{repo}/git/blobs'],
  'git.gitGetBlob': ['GET', '/repos/{owner}/{repo}/git/blobs/{file_sha}'],
  'git.gitCreateCommit': ['POST', '/repos/{owner}/{repo}/git/commits'],
  'git.gitGetCommit': ['GET', '/repos/{owner}/{repo}/git/commits/{commit_sha}'],
  'git.gitListMatchingRefs': ['GET', '/repos/{owner}/{repo}/git/matching-refs/{ref}'],
  'git.gitGetRef': ['GET', '/repos/{owner}/{repo}/git/ref/{ref}'],
  'git.gitCreateRef': ['POST', '/repos/{owner}/{repo}/git/refs'],
  'git.gitUpdateRef': ['PATCH', '/repos/{owner}/{repo}/git/refs/{ref}'],
  'git.gitDeleteRef': ['DELETE', '/repos/{owner}/{repo}/git/refs/{ref}'],
  'git.gitCreateTag': ['POST', '/repos/{owner}/{repo}/git/tags'],
  'git.gitGetTag': ['GET', '/repos/{owner}/{repo}/git/tags/{tag_sha}'],
  'git.gitCreateTree': ['POST', '/repos/{owner}/{repo}/git/trees'],
  'git.gitGetTree': ['GET', '/repos/{owner}/{repo}/git/trees/{tree_sha}'],
  'repos.reposListWebhooks': ['GET', '/repos/{owner}/{repo}/hooks'],
  'repos.reposCreateWebhook': ['POST', '/repos/{owner}/{repo}/hooks'],
  'repos.reposGetWebhook': ['GET', '/repos/{owner}/{repo}/hooks/{hook_id}'],
  'repos.reposUpdateWebhook': ['PATCH', '/repos/{owner}/{repo}/hooks/{hook_id}'],
  'repos.reposDeleteWebhook': ['DELETE', '/repos/{owner}/{repo}/hooks/{hook_id}'],
  'repos.reposGetWebhookConfigForRepo': ['GET', '/repos/{owner}/{repo}/hooks/{hook_id}/config'],
  'repos.reposUpdateWebhookConfigForRepo': ['PATCH', '/repos/{owner}/{repo}/hooks/{hook_id}/config'],
  'repos.reposListWebhookDeliveries': ['GET', '/repos/{owner}/{repo}/hooks/{hook_id}/deliveries'],
  'repos.reposGetWebhookDelivery': ['GET', '/repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}'],
  'repos.reposRedeliverWebhookDelivery': [
    'POST',
    '/repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts'
  ],
  'repos.reposPingWebhook': ['POST', '/repos/{owner}/{repo}/hooks/{hook_id}/pings'],
  'repos.reposTestPushWebhook': ['POST', '/repos/{owner}/{repo}/hooks/{hook_id}/tests'],
  'repos.reposCheckImmutableReleases': ['GET', '/repos/{owner}/{repo}/immutable-releases'],
  'repos.reposEnableImmutableReleases': ['PUT', '/repos/{owner}/{repo}/immutable-releases'],
  'repos.reposDisableImmutableReleases': ['DELETE', '/repos/{owner}/{repo}/immutable-releases'],
  'migrations.migrationsGetImportStatus': ['GET', '/repos/{owner}/{repo}/import'],
  'migrations.migrationsStartImport': ['PUT', '/repos/{owner}/{repo}/import'],
  'migrations.migrationsUpdateImport': ['PATCH', '/repos/{owner}/{repo}/import'],
  'migrations.migrationsCancelImport': ['DELETE', '/repos/{owner}/{repo}/import'],
  'migrations.migrationsGetCommitAuthors': ['GET', '/repos/{owner}/{repo}/import/authors'],
  'migrations.migrationsMapCommitAuthor': ['PATCH', '/repos/{owner}/{repo}/import/authors/{author_id}'],
  'migrations.migrationsGetLargeFiles': ['GET', '/repos/{owner}/{repo}/import/large_files'],
  'migrations.migrationsSetLfsPreference': ['PATCH', '/repos/{owner}/{repo}/import/lfs'],
  'apps.appsGetRepoInstallation': ['GET', '/repos/{owner}/{repo}/installation'],
  'interactions.interactionsGetRestrictionsForRepo': ['GET', '/repos/{owner}/{repo}/interaction-limits'],
  'interactions.interactionsSetRestrictionsForRepo': ['PUT', '/repos/{owner}/{repo}/interaction-limits'],
  'interactions.interactionsRemoveRestrictionsForRepo': ['DELETE', '/repos/{owner}/{repo}/interaction-limits'],
  'repos.reposListInvitations': ['GET', '/repos/{owner}/{repo}/invitations'],
  'repos.reposUpdateInvitation': ['PATCH', '/repos/{owner}/{repo}/invitations/{invitation_id}'],
  'repos.reposDeleteInvitation': ['DELETE', '/repos/{owner}/{repo}/invitations/{invitation_id}'],
  'issues.issuesListForRepo': ['GET', '/repos/{owner}/{repo}/issues'],
  'issues.issuesCreate': ['POST', '/repos/{owner}/{repo}/issues'],
  'issues.issuesListCommentsForRepo': ['GET', '/repos/{owner}/{repo}/issues/comments'],
  'issues.issuesGetComment': ['GET', '/repos/{owner}/{repo}/issues/comments/{comment_id}'],
  'issues.issuesUpdateComment': ['PATCH', '/repos/{owner}/{repo}/issues/comments/{comment_id}'],
  'issues.issuesDeleteComment': ['DELETE', '/repos/{owner}/{repo}/issues/comments/{comment_id}'],
  'reactions.reactionsListForIssueComment': ['GET', '/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions'],
  'reactions.reactionsCreateForIssueComment': ['POST', '/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions'],
  'reactions.reactionsDeleteForIssueComment': [
    'DELETE',
    '/repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}'
  ],
  'issues.issuesListEventsForRepo': ['GET', '/repos/{owner}/{repo}/issues/events'],
  'issues.issuesGetEvent': ['GET', '/repos/{owner}/{repo}/issues/events/{event_id}'],
  'issues.issuesGet': ['GET', '/repos/{owner}/{repo}/issues/{issue_number}'],
  'issues.issuesUpdate': ['PATCH', '/repos/{owner}/{repo}/issues/{issue_number}'],
  'issues.issuesAddAssignees': ['POST', '/repos/{owner}/{repo}/issues/{issue_number}/assignees'],
  'issues.issuesRemoveAssignees': ['DELETE', '/repos/{owner}/{repo}/issues/{issue_number}/assignees'],
  'issues.issuesCheckUserCanBeAssignedToIssue': [
    'GET',
    '/repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}'
  ],
  'issues.issuesListComments': ['GET', '/repos/{owner}/{repo}/issues/{issue_number}/comments'],
  'issues.issuesCreateComment': ['POST', '/repos/{owner}/{repo}/issues/{issue_number}/comments'],
  'issues.issuesListDependenciesBlockedBy': [
    'GET',
    '/repos/{owner}/{repo}/issues/{issue_number}/dependencies/blocked_by'
  ],
  'issues.issuesAddBlockedByDependency': [
    'POST',
    '/repos/{owner}/{repo}/issues/{issue_number}/dependencies/blocked_by'
  ],
  'issues.issuesRemoveDependencyBlockedBy': [
    'DELETE',
    '/repos/{owner}/{repo}/issues/{issue_number}/dependencies/blocked_by/{issue_id}'
  ],
  'issues.issuesListDependenciesBlocking': ['GET', '/repos/{owner}/{repo}/issues/{issue_number}/dependencies/blocking'],
  'issues.issuesListEvents': ['GET', '/repos/{owner}/{repo}/issues/{issue_number}/events'],
  'issues.issuesListLabelsOnIssue': ['GET', '/repos/{owner}/{repo}/issues/{issue_number}/labels'],
  'issues.issuesAddLabels': ['POST', '/repos/{owner}/{repo}/issues/{issue_number}/labels'],
  'issues.issuesSetLabels': ['PUT', '/repos/{owner}/{repo}/issues/{issue_number}/labels'],
  'issues.issuesRemoveAllLabels': ['DELETE', '/repos/{owner}/{repo}/issues/{issue_number}/labels'],
  'issues.issuesRemoveLabel': ['DELETE', '/repos/{owner}/{repo}/issues/{issue_number}/labels/{name}'],
  'issues.issuesLock': ['PUT', '/repos/{owner}/{repo}/issues/{issue_number}/lock'],
  'issues.issuesUnlock': ['DELETE', '/repos/{owner}/{repo}/issues/{issue_number}/lock'],
  'issues.issuesGetParent': ['GET', '/repos/{owner}/{repo}/issues/{issue_number}/parent'],
  'reactions.reactionsListForIssue': ['GET', '/repos/{owner}/{repo}/issues/{issue_number}/reactions'],
  'reactions.reactionsCreateForIssue': ['POST', '/repos/{owner}/{repo}/issues/{issue_number}/reactions'],
  'reactions.reactionsDeleteForIssue': [
    'DELETE',
    '/repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}'
  ],
  'issues.issuesRemoveSubIssue': ['DELETE', '/repos/{owner}/{repo}/issues/{issue_number}/sub_issue'],
  'issues.issuesListSubIssues': ['GET', '/repos/{owner}/{repo}/issues/{issue_number}/sub_issues'],
  'issues.issuesAddSubIssue': ['POST', '/repos/{owner}/{repo}/issues/{issue_number}/sub_issues'],
  'issues.issuesReprioritizeSubIssue': ['PATCH', '/repos/{owner}/{repo}/issues/{issue_number}/sub_issues/priority'],
  'issues.issuesListEventsForTimeline': ['GET', '/repos/{owner}/{repo}/issues/{issue_number}/timeline'],
  'repos.reposListDeployKeys': ['GET', '/repos/{owner}/{repo}/keys'],
  'repos.reposCreateDeployKey': ['POST', '/repos/{owner}/{repo}/keys'],
  'repos.reposGetDeployKey': ['GET', '/repos/{owner}/{repo}/keys/{key_id}'],
  'repos.reposDeleteDeployKey': ['DELETE', '/repos/{owner}/{repo}/keys/{key_id}'],
  'issues.issuesListLabelsForRepo': ['GET', '/repos/{owner}/{repo}/labels'],
  'issues.issuesCreateLabel': ['POST', '/repos/{owner}/{repo}/labels'],
  'issues.issuesGetLabel': ['GET', '/repos/{owner}/{repo}/labels/{name}'],
  'issues.issuesUpdateLabel': ['PATCH', '/repos/{owner}/{repo}/labels/{name}'],
  'issues.issuesDeleteLabel': ['DELETE', '/repos/{owner}/{repo}/labels/{name}'],
  'repos.reposListLanguages': ['GET', '/repos/{owner}/{repo}/languages'],
  'licenses.licensesGetForRepo': ['GET', '/repos/{owner}/{repo}/license'],
  'repos.reposMergeUpstream': ['POST', '/repos/{owner}/{repo}/merge-upstream'],
  'repos.reposMerge': ['POST', '/repos/{owner}/{repo}/merges'],
  'issues.issuesListMilestones': ['GET', '/repos/{owner}/{repo}/milestones'],
  'issues.issuesCreateMilestone': ['POST', '/repos/{owner}/{repo}/milestones'],
  'issues.issuesGetMilestone': ['GET', '/repos/{owner}/{repo}/milestones/{milestone_number}'],
  'issues.issuesUpdateMilestone': ['PATCH', '/repos/{owner}/{repo}/milestones/{milestone_number}'],
  'issues.issuesDeleteMilestone': ['DELETE', '/repos/{owner}/{repo}/milestones/{milestone_number}'],
  'issues.issuesListLabelsForMilestone': ['GET', '/repos/{owner}/{repo}/milestones/{milestone_number}/labels'],
  'activity.activityListRepoNotificationsForAuthenticatedUser': ['GET', '/repos/{owner}/{repo}/notifications'],
  'activity.activityMarkRepoNotificationsAsRead': ['PUT', '/repos/{owner}/{repo}/notifications'],
  'repos.reposGetPages': ['GET', '/repos/{owner}/{repo}/pages'],
  'repos.reposCreatePagesSite': ['POST', '/repos/{owner}/{repo}/pages'],
  'repos.reposUpdateInformationAboutPagesSite': ['PUT', '/repos/{owner}/{repo}/pages'],
  'repos.reposDeletePagesSite': ['DELETE', '/repos/{owner}/{repo}/pages'],
  'repos.reposListPagesBuilds': ['GET', '/repos/{owner}/{repo}/pages/builds'],
  'repos.reposRequestPagesBuild': ['POST', '/repos/{owner}/{repo}/pages/builds'],
  'repos.reposGetLatestPagesBuild': ['GET', '/repos/{owner}/{repo}/pages/builds/latest'],
  'repos.reposGetPagesBuild': ['GET', '/repos/{owner}/{repo}/pages/builds/{build_id}'],
  'repos.reposCreatePagesDeployment': ['POST', '/repos/{owner}/{repo}/pages/deployments'],
  'repos.reposGetPagesDeployment': ['GET', '/repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}'],
  'repos.reposCancelPagesDeployment': ['POST', '/repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel'],
  'repos.reposGetPagesHealthCheck': ['GET', '/repos/{owner}/{repo}/pages/health'],
  'repos.reposCheckPrivateVulnerabilityReporting': ['GET', '/repos/{owner}/{repo}/private-vulnerability-reporting'],
  'repos.reposEnablePrivateVulnerabilityReporting': ['PUT', '/repos/{owner}/{repo}/private-vulnerability-reporting'],
  'repos.reposDisablePrivateVulnerabilityReporting': [
    'DELETE',
    '/repos/{owner}/{repo}/private-vulnerability-reporting'
  ],
  'projectsClassic.projectsClassicListForRepo': ['GET', '/repos/{owner}/{repo}/projects'],
  'projectsClassic.projectsClassicCreateForRepo': ['POST', '/repos/{owner}/{repo}/projects'],
  'repos.reposCustomPropertiesForReposGetRepositoryValues': ['GET', '/repos/{owner}/{repo}/properties/values'],
  'repos.reposCustomPropertiesForReposCreateOrUpdateRepositoryValues': [
    'PATCH',
    '/repos/{owner}/{repo}/properties/values'
  ],
  'pulls.pullsList': ['GET', '/repos/{owner}/{repo}/pulls'],
  'pulls.pullsCreate': ['POST', '/repos/{owner}/{repo}/pulls'],
  'pulls.pullsListReviewCommentsForRepo': ['GET', '/repos/{owner}/{repo}/pulls/comments'],
  'pulls.pullsGetReviewComment': ['GET', '/repos/{owner}/{repo}/pulls/comments/{comment_id}'],
  'pulls.pullsUpdateReviewComment': ['PATCH', '/repos/{owner}/{repo}/pulls/comments/{comment_id}'],
  'pulls.pullsDeleteReviewComment': ['DELETE', '/repos/{owner}/{repo}/pulls/comments/{comment_id}'],
  'reactions.reactionsListForPullRequestReviewComment': [
    'GET',
    '/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions'
  ],
  'reactions.reactionsCreateForPullRequestReviewComment': [
    'POST',
    '/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions'
  ],
  'reactions.reactionsDeleteForPullRequestComment': [
    'DELETE',
    '/repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}'
  ],
  'pulls.pullsGet': ['GET', '/repos/{owner}/{repo}/pulls/{pull_number}'],
  'pulls.pullsUpdate': ['PATCH', '/repos/{owner}/{repo}/pulls/{pull_number}'],
  'codespaces.codespacesCreateWithPrForAuthenticatedUser': [
    'POST',
    '/repos/{owner}/{repo}/pulls/{pull_number}/codespaces'
  ],
  'pulls.pullsListReviewComments': ['GET', '/repos/{owner}/{repo}/pulls/{pull_number}/comments'],
  'pulls.pullsCreateReviewComment': ['POST', '/repos/{owner}/{repo}/pulls/{pull_number}/comments'],
  'pulls.pullsCreateReplyForReviewComment': [
    'POST',
    '/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies'
  ],
  'pulls.pullsListCommits': ['GET', '/repos/{owner}/{repo}/pulls/{pull_number}/commits'],
  'pulls.pullsListFiles': ['GET', '/repos/{owner}/{repo}/pulls/{pull_number}/files'],
  'pulls.pullsCheckIfMerged': ['GET', '/repos/{owner}/{repo}/pulls/{pull_number}/merge'],
  'pulls.pullsMerge': ['PUT', '/repos/{owner}/{repo}/pulls/{pull_number}/merge'],
  'pulls.pullsListRequestedReviewers': ['GET', '/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers'],
  'pulls.pullsRequestReviewers': ['POST', '/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers'],
  'pulls.pullsRemoveRequestedReviewers': ['DELETE', '/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers'],
  'pulls.pullsListReviews': ['GET', '/repos/{owner}/{repo}/pulls/{pull_number}/reviews'],
  'pulls.pullsCreateReview': ['POST', '/repos/{owner}/{repo}/pulls/{pull_number}/reviews'],
  'pulls.pullsGetReview': ['GET', '/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}'],
  'pulls.pullsUpdateReview': ['PUT', '/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}'],
  'pulls.pullsDeletePendingReview': ['DELETE', '/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}'],
  'pulls.pullsListCommentsForReview': ['GET', '/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments'],
  'pulls.pullsDismissReview': ['PUT', '/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals'],
  'pulls.pullsSubmitReview': ['POST', '/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events'],
  'pulls.pullsUpdateBranch': ['PUT', '/repos/{owner}/{repo}/pulls/{pull_number}/update-branch'],
  'repos.reposGetReadme': ['GET', '/repos/{owner}/{repo}/readme'],
  'repos.reposGetReadmeInDirectory': ['GET', '/repos/{owner}/{repo}/readme/{dir}'],
  'repos.reposListReleases': ['GET', '/repos/{owner}/{repo}/releases'],
  'repos.reposCreateRelease': ['POST', '/repos/{owner}/{repo}/releases'],
  'repos.reposGetReleaseAsset': ['GET', '/repos/{owner}/{repo}/releases/assets/{asset_id}'],
  'repos.reposUpdateReleaseAsset': ['PATCH', '/repos/{owner}/{repo}/releases/assets/{asset_id}'],
  'repos.reposDeleteReleaseAsset': ['DELETE', '/repos/{owner}/{repo}/releases/assets/{asset_id}'],
  'repos.reposGenerateReleaseNotes': ['POST', '/repos/{owner}/{repo}/releases/generate-notes'],
  'repos.reposGetLatestRelease': ['GET', '/repos/{owner}/{repo}/releases/latest'],
  'repos.reposGetReleaseByTag': ['GET', '/repos/{owner}/{repo}/releases/tags/{tag}'],
  'repos.reposGetRelease': ['GET', '/repos/{owner}/{repo}/releases/{release_id}'],
  'repos.reposUpdateRelease': ['PATCH', '/repos/{owner}/{repo}/releases/{release_id}'],
  'repos.reposDeleteRelease': ['DELETE', '/repos/{owner}/{repo}/releases/{release_id}'],
  'repos.reposListReleaseAssets': ['GET', '/repos/{owner}/{repo}/releases/{release_id}/assets'],
  'repos.reposUploadReleaseAsset': ['POST', '/repos/{owner}/{repo}/releases/{release_id}/assets'],
  'reactions.reactionsListForRelease': ['GET', '/repos/{owner}/{repo}/releases/{release_id}/reactions'],
  'reactions.reactionsCreateForRelease': ['POST', '/repos/{owner}/{repo}/releases/{release_id}/reactions'],
  'reactions.reactionsDeleteForRelease': [
    'DELETE',
    '/repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}'
  ],
  'repos.reposGetBranchRules': ['GET', '/repos/{owner}/{repo}/rules/branches/{branch}'],
  'repos.reposGetRepoRulesets': ['GET', '/repos/{owner}/{repo}/rulesets'],
  'repos.reposCreateRepoRuleset': ['POST', '/repos/{owner}/{repo}/rulesets'],
  'repos.reposGetRepoRuleSuites': ['GET', '/repos/{owner}/{repo}/rulesets/rule-suites'],
  'repos.reposGetRepoRuleSuite': ['GET', '/repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}'],
  'repos.reposGetRepoRuleset': ['GET', '/repos/{owner}/{repo}/rulesets/{ruleset_id}'],
  'repos.reposUpdateRepoRuleset': ['PUT', '/repos/{owner}/{repo}/rulesets/{ruleset_id}'],
  'repos.reposDeleteRepoRuleset': ['DELETE', '/repos/{owner}/{repo}/rulesets/{ruleset_id}'],
  'repos.reposGetRepoRulesetHistory': ['GET', '/repos/{owner}/{repo}/rulesets/{ruleset_id}/history'],
  'repos.reposGetRepoRulesetVersion': ['GET', '/repos/{owner}/{repo}/rulesets/{ruleset_id}/history/{version_id}'],
  'secretScanning.secretScanningListAlertsForRepo': ['GET', '/repos/{owner}/{repo}/secret-scanning/alerts'],
  'secretScanning.secretScanningGetAlert': ['GET', '/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}'],
  'secretScanning.secretScanningUpdateAlert': ['PATCH', '/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}'],
  'secretScanning.secretScanningListLocationsForAlert': [
    'GET',
    '/repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations'
  ],
  'secretScanning.secretScanningCreatePushProtectionBypass': [
    'POST',
    '/repos/{owner}/{repo}/secret-scanning/push-protection-bypasses'
  ],
  'secretScanning.secretScanningGetScanHistory': ['GET', '/repos/{owner}/{repo}/secret-scanning/scan-history'],
  'securityAdvisories.securityAdvisoriesListRepositoryAdvisories': ['GET', '/repos/{owner}/{repo}/security-advisories'],
  'securityAdvisories.securityAdvisoriesCreateRepositoryAdvisory': [
    'POST',
    '/repos/{owner}/{repo}/security-advisories'
  ],
  'securityAdvisories.securityAdvisoriesCreatePrivateVulnerabilityReport': [
    'POST',
    '/repos/{owner}/{repo}/security-advisories/reports'
  ],
  'securityAdvisories.securityAdvisoriesGetRepositoryAdvisory': [
    'GET',
    '/repos/{owner}/{repo}/security-advisories/{ghsa_id}'
  ],
  'securityAdvisories.securityAdvisoriesUpdateRepositoryAdvisory': [
    'PATCH',
    '/repos/{owner}/{repo}/security-advisories/{ghsa_id}'
  ],
  'securityAdvisories.securityAdvisoriesCreateRepositoryAdvisoryCveRequest': [
    'POST',
    '/repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve'
  ],
  'securityAdvisories.securityAdvisoriesCreateFork': [
    'POST',
    '/repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks'
  ],
  'activity.activityListStargazersForRepo': ['GET', '/repos/{owner}/{repo}/stargazers'],
  'repos.reposGetCodeFrequencyStats': ['GET', '/repos/{owner}/{repo}/stats/code_frequency'],
  'repos.reposGetCommitActivityStats': ['GET', '/repos/{owner}/{repo}/stats/commit_activity'],
  'repos.reposGetContributorsStats': ['GET', '/repos/{owner}/{repo}/stats/contributors'],
  'repos.reposGetParticipationStats': ['GET', '/repos/{owner}/{repo}/stats/participation'],
  'repos.reposGetPunchCardStats': ['GET', '/repos/{owner}/{repo}/stats/punch_card'],
  'repos.reposCreateCommitStatus': ['POST', '/repos/{owner}/{repo}/statuses/{sha}'],
  'activity.activityListWatchersForRepo': ['GET', '/repos/{owner}/{repo}/subscribers'],
  'activity.activityGetRepoSubscription': ['GET', '/repos/{owner}/{repo}/subscription'],
  'activity.activitySetRepoSubscription': ['PUT', '/repos/{owner}/{repo}/subscription'],
  'activity.activityDeleteRepoSubscription': ['DELETE', '/repos/{owner}/{repo}/subscription'],
  'repos.reposListTags': ['GET', '/repos/{owner}/{repo}/tags'],
  'repos.reposListTagProtection': ['GET', '/repos/{owner}/{repo}/tags/protection'],
  'repos.reposCreateTagProtection': ['POST', '/repos/{owner}/{repo}/tags/protection'],
  'repos.reposDeleteTagProtection': ['DELETE', '/repos/{owner}/{repo}/tags/protection/{tag_protection_id}'],
  'repos.reposDownloadTarballArchive': ['GET', '/repos/{owner}/{repo}/tarball/{ref}'],
  'repos.reposListTeams': ['GET', '/repos/{owner}/{repo}/teams'],
  'repos.reposGetAllTopics': ['GET', '/repos/{owner}/{repo}/topics'],
  'repos.reposReplaceAllTopics': ['PUT', '/repos/{owner}/{repo}/topics'],
  'repos.reposGetClones': ['GET', '/repos/{owner}/{repo}/traffic/clones'],
  'repos.reposGetTopPaths': ['GET', '/repos/{owner}/{repo}/traffic/popular/paths'],
  'repos.reposGetTopReferrers': ['GET', '/repos/{owner}/{repo}/traffic/popular/referrers'],
  'repos.reposGetViews': ['GET', '/repos/{owner}/{repo}/traffic/views'],
  'repos.reposTransfer': ['POST', '/repos/{owner}/{repo}/transfer'],
  'repos.reposCheckVulnerabilityAlerts': ['GET', '/repos/{owner}/{repo}/vulnerability-alerts'],
  'repos.reposEnableVulnerabilityAlerts': ['PUT', '/repos/{owner}/{repo}/vulnerability-alerts'],
  'repos.reposDisableVulnerabilityAlerts': ['DELETE', '/repos/{owner}/{repo}/vulnerability-alerts'],
  'repos.reposDownloadZipballArchive': ['GET', '/repos/{owner}/{repo}/zipball/{ref}'],
  'repos.reposCreateUsingTemplate': ['POST', '/repos/{template_owner}/{template_repo}/generate'],
  'repos.reposListPublic': ['GET', '/repositories'],
  'search.searchCode': ['GET', '/search/code'],
  'search.searchCommits': ['GET', '/search/commits'],
  'search.searchIssuesAndPullRequests': ['GET', '/search/issues'],
  'search.searchLabels': ['GET', '/search/labels'],
  'search.searchRepos': ['GET', '/search/repositories'],
  'search.searchTopics': ['GET', '/search/topics'],
  'search.searchUsers': ['GET', '/search/users'],
  'teams.teamsGetLegacy': ['GET', '/teams/{team_id}'],
  'teams.teamsUpdateLegacy': ['PATCH', '/teams/{team_id}'],
  'teams.teamsDeleteLegacy': ['DELETE', '/teams/{team_id}'],
  'teams.teamsListDiscussionsLegacy': ['GET', '/teams/{team_id}/discussions'],
  'teams.teamsCreateDiscussionLegacy': ['POST', '/teams/{team_id}/discussions'],
  'teams.teamsGetDiscussionLegacy': ['GET', '/teams/{team_id}/discussions/{discussion_number}'],
  'teams.teamsUpdateDiscussionLegacy': ['PATCH', '/teams/{team_id}/discussions/{discussion_number}'],
  'teams.teamsDeleteDiscussionLegacy': ['DELETE', '/teams/{team_id}/discussions/{discussion_number}'],
  'teams.teamsListDiscussionCommentsLegacy': ['GET', '/teams/{team_id}/discussions/{discussion_number}/comments'],
  'teams.teamsCreateDiscussionCommentLegacy': ['POST', '/teams/{team_id}/discussions/{discussion_number}/comments'],
  'teams.teamsGetDiscussionCommentLegacy': [
    'GET',
    '/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}'
  ],
  'teams.teamsUpdateDiscussionCommentLegacy': [
    'PATCH',
    '/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}'
  ],
  'teams.teamsDeleteDiscussionCommentLegacy': [
    'DELETE',
    '/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}'
  ],
  'reactions.reactionsListForTeamDiscussionCommentLegacy': [
    'GET',
    '/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions'
  ],
  'reactions.reactionsCreateForTeamDiscussionCommentLegacy': [
    'POST',
    '/teams/{team_id}/discussions/{discussion_number}/comments/{comment_number}/reactions'
  ],
  'reactions.reactionsListForTeamDiscussionLegacy': [
    'GET',
    '/teams/{team_id}/discussions/{discussion_number}/reactions'
  ],
  'reactions.reactionsCreateForTeamDiscussionLegacy': [
    'POST',
    '/teams/{team_id}/discussions/{discussion_number}/reactions'
  ],
  'teams.teamsListPendingInvitationsLegacy': ['GET', '/teams/{team_id}/invitations'],
  'teams.teamsListMembersLegacy': ['GET', '/teams/{team_id}/members'],
  'teams.teamsGetMemberLegacy': ['GET', '/teams/{team_id}/members/{username}'],
  'teams.teamsAddMemberLegacy': ['PUT', '/teams/{team_id}/members/{username}'],
  'teams.teamsRemoveMemberLegacy': ['DELETE', '/teams/{team_id}/members/{username}'],
  'teams.teamsGetMembershipForUserLegacy': ['GET', '/teams/{team_id}/memberships/{username}'],
  'teams.teamsAddOrUpdateMembershipForUserLegacy': ['PUT', '/teams/{team_id}/memberships/{username}'],
  'teams.teamsRemoveMembershipForUserLegacy': ['DELETE', '/teams/{team_id}/memberships/{username}'],
  'teams.teamsListProjectsLegacy': ['GET', '/teams/{team_id}/projects'],
  'teams.teamsCheckPermissionsForProjectLegacy': ['GET', '/teams/{team_id}/projects/{project_id}'],
  'teams.teamsAddOrUpdateProjectPermissionsLegacy': ['PUT', '/teams/{team_id}/projects/{project_id}'],
  'teams.teamsRemoveProjectLegacy': ['DELETE', '/teams/{team_id}/projects/{project_id}'],
  'teams.teamsListReposLegacy': ['GET', '/teams/{team_id}/repos'],
  'teams.teamsCheckPermissionsForRepoLegacy': ['GET', '/teams/{team_id}/repos/{owner}/{repo}'],
  'teams.teamsAddOrUpdateRepoPermissionsLegacy': ['PUT', '/teams/{team_id}/repos/{owner}/{repo}'],
  'teams.teamsRemoveRepoLegacy': ['DELETE', '/teams/{team_id}/repos/{owner}/{repo}'],
  'teams.teamsListChildLegacy': ['GET', '/teams/{team_id}/teams'],
  'users.usersGetAuthenticated': ['GET', '/user'],
  'users.usersUpdateAuthenticated': ['PATCH', '/user'],
  'users.usersListBlockedByAuthenticatedUser': ['GET', '/user/blocks'],
  'users.usersCheckBlocked': ['GET', '/user/blocks/{username}'],
  'users.usersBlock': ['PUT', '/user/blocks/{username}'],
  'users.usersUnblock': ['DELETE', '/user/blocks/{username}'],
  'codespaces.codespacesListForAuthenticatedUser': ['GET', '/user/codespaces'],
  'codespaces.codespacesCreateForAuthenticatedUser': ['POST', '/user/codespaces'],
  'codespaces.codespacesListSecretsForAuthenticatedUser': ['GET', '/user/codespaces/secrets'],
  'codespaces.codespacesGetPublicKeyForAuthenticatedUser': ['GET', '/user/codespaces/secrets/public-key'],
  'codespaces.codespacesGetSecretForAuthenticatedUser': ['GET', '/user/codespaces/secrets/{secret_name}'],
  'codespaces.codespacesCreateOrUpdateSecretForAuthenticatedUser': ['PUT', '/user/codespaces/secrets/{secret_name}'],
  'codespaces.codespacesDeleteSecretForAuthenticatedUser': ['DELETE', '/user/codespaces/secrets/{secret_name}'],
  'codespaces.codespacesListRepositoriesForSecretForAuthenticatedUser': [
    'GET',
    '/user/codespaces/secrets/{secret_name}/repositories'
  ],
  'codespaces.codespacesSetRepositoriesForSecretForAuthenticatedUser': [
    'PUT',
    '/user/codespaces/secrets/{secret_name}/repositories'
  ],
  'codespaces.codespacesAddRepositoryForSecretForAuthenticatedUser': [
    'PUT',
    '/user/codespaces/secrets/{secret_name}/repositories/{repository_id}'
  ],
  'codespaces.codespacesRemoveRepositoryForSecretForAuthenticatedUser': [
    'DELETE',
    '/user/codespaces/secrets/{secret_name}/repositories/{repository_id}'
  ],
  'codespaces.codespacesGetForAuthenticatedUser': ['GET', '/user/codespaces/{codespace_name}'],
  'codespaces.codespacesUpdateForAuthenticatedUser': ['PATCH', '/user/codespaces/{codespace_name}'],
  'codespaces.codespacesDeleteForAuthenticatedUser': ['DELETE', '/user/codespaces/{codespace_name}'],
  'codespaces.codespacesExportForAuthenticatedUser': ['POST', '/user/codespaces/{codespace_name}/exports'],
  'codespaces.codespacesGetExportDetailsForAuthenticatedUser': [
    'GET',
    '/user/codespaces/{codespace_name}/exports/{export_id}'
  ],
  'codespaces.codespacesCodespaceMachinesForAuthenticatedUser': ['GET', '/user/codespaces/{codespace_name}/machines'],
  'codespaces.codespacesPublishForAuthenticatedUser': ['POST', '/user/codespaces/{codespace_name}/publish'],
  'codespaces.codespacesStartForAuthenticatedUser': ['POST', '/user/codespaces/{codespace_name}/start'],
  'codespaces.codespacesStopForAuthenticatedUser': ['POST', '/user/codespaces/{codespace_name}/stop'],
  'packages.packagesListDockerMigrationConflictingPackagesForAuthenticatedUser': ['GET', '/user/docker/conflicts'],
  'users.usersSetPrimaryEmailVisibilityForAuthenticatedUser': ['PATCH', '/user/email/visibility'],
  'users.usersListEmailsForAuthenticatedUser': ['GET', '/user/emails'],
  'users.usersAddEmailForAuthenticatedUser': ['POST', '/user/emails'],
  'users.usersDeleteEmailForAuthenticatedUser': ['DELETE', '/user/emails'],
  'users.usersListFollowersForAuthenticatedUser': ['GET', '/user/followers'],
  'users.usersListFollowedByAuthenticatedUser': ['GET', '/user/following'],
  'users.usersCheckPersonIsFollowedByAuthenticated': ['GET', '/user/following/{username}'],
  'users.usersFollow': ['PUT', '/user/following/{username}'],
  'users.usersUnfollow': ['DELETE', '/user/following/{username}'],
  'users.usersListGpgKeysForAuthenticatedUser': ['GET', '/user/gpg_keys'],
  'users.usersCreateGpgKeyForAuthenticatedUser': ['POST', '/user/gpg_keys'],
  'users.usersGetGpgKeyForAuthenticatedUser': ['GET', '/user/gpg_keys/{gpg_key_id}'],
  'users.usersDeleteGpgKeyForAuthenticatedUser': ['DELETE', '/user/gpg_keys/{gpg_key_id}'],
  'apps.appsListInstallationsForAuthenticatedUser': ['GET', '/user/installations'],
  'apps.appsListInstallationReposForAuthenticatedUser': ['GET', '/user/installations/{installation_id}/repositories'],
  'apps.appsAddRepoToInstallationForAuthenticatedUser': [
    'PUT',
    '/user/installations/{installation_id}/repositories/{repository_id}'
  ],
  'apps.appsRemoveRepoFromInstallationForAuthenticatedUser': [
    'DELETE',
    '/user/installations/{installation_id}/repositories/{repository_id}'
  ],
  'interactions.interactionsGetRestrictionsForAuthenticatedUser': ['GET', '/user/interaction-limits'],
  'interactions.interactionsSetRestrictionsForAuthenticatedUser': ['PUT', '/user/interaction-limits'],
  'interactions.interactionsRemoveRestrictionsForAuthenticatedUser': ['DELETE', '/user/interaction-limits'],
  'issues.issuesListForAuthenticatedUser': ['GET', '/user/issues'],
  'users.usersListPublicSshKeysForAuthenticatedUser': ['GET', '/user/keys'],
  'users.usersCreatePublicSshKeyForAuthenticatedUser': ['POST', '/user/keys'],
  'users.usersGetPublicSshKeyForAuthenticatedUser': ['GET', '/user/keys/{key_id}'],
  'users.usersDeletePublicSshKeyForAuthenticatedUser': ['DELETE', '/user/keys/{key_id}'],
  'apps.appsListSubscriptionsForAuthenticatedUser': ['GET', '/user/marketplace_purchases'],
  'apps.appsListSubscriptionsForAuthenticatedUserStubbed': ['GET', '/user/marketplace_purchases/stubbed'],
  'orgs.orgsListMembershipsForAuthenticatedUser': ['GET', '/user/memberships/orgs'],
  'orgs.orgsGetMembershipForAuthenticatedUser': ['GET', '/user/memberships/orgs/{org}'],
  'orgs.orgsUpdateMembershipForAuthenticatedUser': ['PATCH', '/user/memberships/orgs/{org}'],
  'migrations.migrationsListForAuthenticatedUser': ['GET', '/user/migrations'],
  'migrations.migrationsStartForAuthenticatedUser': ['POST', '/user/migrations'],
  'migrations.migrationsGetStatusForAuthenticatedUser': ['GET', '/user/migrations/{migration_id}'],
  'migrations.migrationsGetArchiveForAuthenticatedUser': ['GET', '/user/migrations/{migration_id}/archive'],
  'migrations.migrationsDeleteArchiveForAuthenticatedUser': ['DELETE', '/user/migrations/{migration_id}/archive'],
  'migrations.migrationsUnlockRepoForAuthenticatedUser': [
    'DELETE',
    '/user/migrations/{migration_id}/repos/{repo_name}/lock'
  ],
  'migrations.migrationsListReposForAuthenticatedUser': ['GET', '/user/migrations/{migration_id}/repositories'],
  'orgs.orgsListForAuthenticatedUser': ['GET', '/user/orgs'],
  'packages.packagesListPackagesForAuthenticatedUser': ['GET', '/user/packages'],
  'packages.packagesGetPackageForAuthenticatedUser': ['GET', '/user/packages/{package_type}/{package_name}'],
  'packages.packagesDeletePackageForAuthenticatedUser': ['DELETE', '/user/packages/{package_type}/{package_name}'],
  'packages.packagesRestorePackageForAuthenticatedUser': [
    'POST',
    '/user/packages/{package_type}/{package_name}/restore'
  ],
  'packages.packagesGetAllPackageVersionsForPackageOwnedByAuthenticatedUser': [
    'GET',
    '/user/packages/{package_type}/{package_name}/versions'
  ],
  'packages.packagesGetPackageVersionForAuthenticatedUser': [
    'GET',
    '/user/packages/{package_type}/{package_name}/versions/{package_version_id}'
  ],
  'packages.packagesDeletePackageVersionForAuthenticatedUser': [
    'DELETE',
    '/user/packages/{package_type}/{package_name}/versions/{package_version_id}'
  ],
  'packages.packagesRestorePackageVersionForAuthenticatedUser': [
    'POST',
    '/user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore'
  ],
  'projectsClassic.projectsClassicCreateForAuthenticatedUser': ['POST', '/user/projects'],
  'users.usersListPublicEmailsForAuthenticatedUser': ['GET', '/user/public_emails'],
  'repos.reposListForAuthenticatedUser': ['GET', '/user/repos'],
  'repos.reposCreateForAuthenticatedUser': ['POST', '/user/repos'],
  'repos.reposListInvitationsForAuthenticatedUser': ['GET', '/user/repository_invitations'],
  'repos.reposAcceptInvitationForAuthenticatedUser': ['PATCH', '/user/repository_invitations/{invitation_id}'],
  'repos.reposDeclineInvitationForAuthenticatedUser': ['DELETE', '/user/repository_invitations/{invitation_id}'],
  'users.usersListSocialAccountsForAuthenticatedUser': ['GET', '/user/social_accounts'],
  'users.usersAddSocialAccountForAuthenticatedUser': ['POST', '/user/social_accounts'],
  'users.usersDeleteSocialAccountForAuthenticatedUser': ['DELETE', '/user/social_accounts'],
  'users.usersListSshSigningKeysForAuthenticatedUser': ['GET', '/user/ssh_signing_keys'],
  'users.usersCreateSshSigningKeyForAuthenticatedUser': ['POST', '/user/ssh_signing_keys'],
  'users.usersGetSshSigningKeyForAuthenticatedUser': ['GET', '/user/ssh_signing_keys/{ssh_signing_key_id}'],
  'users.usersDeleteSshSigningKeyForAuthenticatedUser': ['DELETE', '/user/ssh_signing_keys/{ssh_signing_key_id}'],
  'activity.activityListReposStarredByAuthenticatedUser': ['GET', '/user/starred'],
  'activity.activityCheckRepoIsStarredByAuthenticatedUser': ['GET', '/user/starred/{owner}/{repo}'],
  'activity.activityStarRepoForAuthenticatedUser': ['PUT', '/user/starred/{owner}/{repo}'],
  'activity.activityUnstarRepoForAuthenticatedUser': ['DELETE', '/user/starred/{owner}/{repo}'],
  'activity.activityListWatchedReposForAuthenticatedUser': ['GET', '/user/subscriptions'],
  'teams.teamsListForAuthenticatedUser': ['GET', '/user/teams'],
  'users.usersGetById': ['GET', '/user/{account_id}'],
  'users.usersList': ['GET', '/users'],
  'users.usersGetByUsername': ['GET', '/users/{username}'],
  'users.usersListAttestationsBulk': ['POST', '/users/{username}/attestations/bulk-list'],
  'users.usersDeleteAttestationsBulk': ['POST', '/users/{username}/attestations/delete-request'],
  'users.usersDeleteAttestationsBySubjectDigest': ['DELETE', '/users/{username}/attestations/digest/{subject_digest}'],
  'users.usersDeleteAttestationsById': ['DELETE', '/users/{username}/attestations/{attestation_id}'],
  'users.usersListAttestations': ['GET', '/users/{username}/attestations/{subject_digest}'],
  'packages.packagesListDockerMigrationConflictingPackagesForUser': ['GET', '/users/{username}/docker/conflicts'],
  'activity.activityListEventsForAuthenticatedUser': ['GET', '/users/{username}/events'],
  'activity.activityListOrgEventsForAuthenticatedUser': ['GET', '/users/{username}/events/orgs/{org}'],
  'activity.activityListPublicEventsForUser': ['GET', '/users/{username}/events/public'],
  'users.usersListFollowersForUser': ['GET', '/users/{username}/followers'],
  'users.usersListFollowingForUser': ['GET', '/users/{username}/following'],
  'users.usersCheckFollowingForUser': ['GET', '/users/{username}/following/{target_user}'],
  'gists.gistsListForUser': ['GET', '/users/{username}/gists'],
  'users.usersListGpgKeysForUser': ['GET', '/users/{username}/gpg_keys'],
  'users.usersGetContextForUser': ['GET', '/users/{username}/hovercard'],
  'apps.appsGetUserInstallation': ['GET', '/users/{username}/installation'],
  'users.usersListPublicKeysForUser': ['GET', '/users/{username}/keys'],
  'orgs.orgsListForUser': ['GET', '/users/{username}/orgs'],
  'packages.packagesListPackagesForUser': ['GET', '/users/{username}/packages'],
  'packages.packagesGetPackageForUser': ['GET', '/users/{username}/packages/{package_type}/{package_name}'],
  'packages.packagesDeletePackageForUser': ['DELETE', '/users/{username}/packages/{package_type}/{package_name}'],
  'packages.packagesRestorePackageForUser': [
    'POST',
    '/users/{username}/packages/{package_type}/{package_name}/restore'
  ],
  'packages.packagesGetAllPackageVersionsForPackageOwnedByUser': [
    'GET',
    '/users/{username}/packages/{package_type}/{package_name}/versions'
  ],
  'packages.packagesGetPackageVersionForUser': [
    'GET',
    '/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}'
  ],
  'packages.packagesDeletePackageVersionForUser': [
    'DELETE',
    '/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}'
  ],
  'packages.packagesRestorePackageVersionForUser': [
    'POST',
    '/users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore'
  ],
  'projectsClassic.projectsClassicListForUser': ['GET', '/users/{username}/projects'],
  'projects.projectsListForUser': ['GET', '/users/{username}/projectsV2'],
  'projects.projectsGetForUser': ['GET', '/users/{username}/projectsV2/{project_number}'],
  'projects.projectsListFieldsForUser': ['GET', '/users/{username}/projectsV2/{project_number}/fields'],
  'projects.projectsGetFieldForUser': ['GET', '/users/{username}/projectsV2/{project_number}/fields/{field_id}'],
  'projects.projectsListItemsForUser': ['GET', '/users/{username}/projectsV2/{project_number}/items'],
  'projects.projectsAddItemForUser': ['POST', '/users/{username}/projectsV2/{project_number}/items'],
  'projects.projectsGetUserItem': ['GET', '/users/{username}/projectsV2/{project_number}/items/{item_id}'],
  'projects.projectsUpdateItemForUser': ['PATCH', '/users/{username}/projectsV2/{project_number}/items/{item_id}'],
  'projects.projectsDeleteItemForUser': ['DELETE', '/users/{username}/projectsV2/{project_number}/items/{item_id}'],
  'activity.activityListReceivedEventsForUser': ['GET', '/users/{username}/received_events'],
  'activity.activityListReceivedPublicEventsForUser': ['GET', '/users/{username}/received_events/public'],
  'repos.reposListForUser': ['GET', '/users/{username}/repos'],
  'billing.billingGetGithubActionsBillingUser': ['GET', '/users/{username}/settings/billing/actions'],
  'billing.billingGetGithubPackagesBillingUser': ['GET', '/users/{username}/settings/billing/packages'],
  'billing.billingGetGithubBillingPremiumRequestUsageReportUser': [
    'GET',
    '/users/{username}/settings/billing/premium_request/usage'
  ],
  'billing.billingGetSharedStorageBillingUser': ['GET', '/users/{username}/settings/billing/shared-storage'],
  'billing.billingGetGithubBillingUsageReportUser': ['GET', '/users/{username}/settings/billing/usage'],
  'users.usersListSocialAccountsForUser': ['GET', '/users/{username}/social_accounts'],
  'users.usersListSshSigningKeysForUser': ['GET', '/users/{username}/ssh_signing_keys'],
  'activity.activityListReposStarredByUser': ['GET', '/users/{username}/starred'],
  'activity.activityListReposWatchedByUser': ['GET', '/users/{username}/subscriptions'],
  'meta.metaGetAllVersions': ['GET', '/versions'],
  'meta.metaGetZen': ['GET', '/zen']
};
